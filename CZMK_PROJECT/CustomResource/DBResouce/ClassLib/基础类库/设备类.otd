<!-- edited with XMLSPY v5 rel. 4 U (http://www.xmlspy.com) by zhoujin (HollySys) -->
<ClassFamily SchemaVersion="20050920" CreateDate="2005-09-16" Creator="周进" xsi:noNamespaceSchemaLocation="..\..\..\PublicProject\debug\bin\CEConfig\OORTDBXML.xsd" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
	<ClassFamilyName>设备类</ClassFamilyName>
	<Des/>
	<ClassFamilyInfo>
		<Include>IncludeFile</Include>
		<DLL>EQ</DLL>
	</ClassFamilyInfo>
	<ClassFamilyVersion>1356327648</ClassFamilyVersion>
	<comment>设备是指由MACS-SCADA系统监控的设备，可以定义一些控制数据。例如：电梯、轨道、风机、计算机、列车、广播放大器等等。</comment>
	<ClassList>
		<Class CreateDate="2005-09-16" Creator="周进">
			<ClassID TagName="设备超类" Description="派生自POINT，是所有扩展设备点类的抽象基类。" Name="EQ" GlobalName="EQ"/>
			<ClassInfo>
				<BaseClassRef GlobalName="::POINT" RefVersion="1"/>
				<Instanteable>可实例化</Instanteable>
			</ClassInfo>
			<ClassVersion>1356327648</ClassVersion>
			<comment>
			</comment>
			<ClassPropertyList>
				<ClassPropertyVersion>1356327648</ClassPropertyVersion>
				<ClassProperty>
					<ClassPropertyID TagName="变量综合报警个数" Description="Synthesis of alarms on the variables，是下属所有变量（包括作为直接子对象的变量和子设备的所属的变量）的综合报警状态。" Name="alarmSynthesis"/>
					<comment/>
					<PropertyProcessChar>
						<StoreChar>自动</StoreChar>
						<EditChar>不可组态</EditChar>
						<VisibleChar>可视</VisibleChar>
						<RealTimeChar>实时项</RealTimeChar>
					</PropertyProcessChar>
					<Size>1</Size>
					<ValueType>基本数据类型</ValueType>
					<BasicType>
						<TypeName>INT8</TypeName>
						<Default/>
						<Min/>
						<Max/>
						<Enum/>
					</BasicType>
				</ClassProperty>
				<ClassProperty>
					<ClassPropertyID TagName="变量综合强制个数" Description="Synthesis of forced setting: number of forced variables for that equipment，是下属所有变量（包括作为直接子对象的变量和子设备的所属的变量）的综合强制状态" Name="forcedSynthesis"/>
					<comment/>
					<PropertyProcessChar>
						<StoreChar>自动</StoreChar>
						<EditChar>不可组态</EditChar>
						<VisibleChar>可视</VisibleChar>
						<RealTimeChar>实时项</RealTimeChar>
					</PropertyProcessChar>
					<Size>1</Size>
					<ValueType>基本数据类型</ValueType>
					<BasicType>
						<TypeName>INT8</TypeName>
						<Default/>
						<Min/>
						<Max/>
						<Enum/>
					</BasicType>
				</ClassProperty>
				<ClassProperty>
					<ClassPropertyID TagName="变量综合无效个数" Description="是下属所有变量（包括作为直接子对象的变量和子设备的所属的变量）的综合无效状态" Name="invalidSynthesis"/>
					<comment/>
					<PropertyProcessChar>
						<StoreChar>自动</StoreChar>
						<EditChar>不可组态</EditChar>
						<VisibleChar>可视</VisibleChar>
						<RealTimeChar>实时项</RealTimeChar>
					</PropertyProcessChar>
					<Size>1</Size>
					<ValueType>基本数据类型</ValueType>
					<BasicType>
						<TypeName>INT8</TypeName>
						<Default/>
						<Min/>
						<Max/>
						<Enum/>
					</BasicType>
				</ClassProperty>
				<ClassProperty><ClassPropertyID Description="相关图文件名，可不包括扩展名（*.mxv），将用于报警推图功能等" TagName="相关图" Name="graphName"/>
					<comment>设备及其子对象产生报警记录中包括该字段信息，根据该字段可以实现报警推图、报警相关图等功能</comment>
					<PropertyProcessChar>
						<StoreChar>自动</StoreChar>
						<EditChar>可组态</EditChar>
						<VisibleChar>可视</VisibleChar>
						<RealTimeChar>参数项</RealTimeChar>
					</PropertyProcessChar>
					<Size>1</Size>
					<ValueType>基本数据类型</ValueType>
					<BasicType><TypeName>STRING16</TypeName><Default></Default><Min></Min><Max></Max><Enum/></BasicType></ClassProperty>
				<ClassProperty><ClassPropertyID Description="在不同的专业中可灵活使用" Name="remark" TagName="设备备注"/>
					<comment></comment>
					<PropertyProcessChar>
						<StoreChar>自动</StoreChar>
						<EditChar>可组态</EditChar>
						<VisibleChar>可视</VisibleChar>
						<RealTimeChar>参数项</RealTimeChar>
					</PropertyProcessChar>
					<Size>1</Size>
					<ValueType>基本数据类型</ValueType>
					<BasicType><TypeName>STRING32</TypeName><Default></Default><Min></Min><Max></Max><Enum/></BasicType></ClassProperty>
				<ClassProperty><ClassPropertyID Description="概览图文件名，可不包括扩展名（*.mxv）" Name="Panorama" TagName="概览图"/>
					<comment/>
					<PropertyProcessChar>
						<StoreChar>自动</StoreChar>
						<EditChar>可组态</EditChar>
						<VisibleChar>可视</VisibleChar>
						<RealTimeChar>参数项</RealTimeChar>
					</PropertyProcessChar>
					<Size>1</Size>
					<ValueType>基本数据类型</ValueType>
					<BasicType><TypeName>STRING16</TypeName><Default></Default><Min></Min><Max></Max><Enum/></BasicType></ClassProperty></ClassPropertyList>
			<ClassBehavior>
				<CommandList>
				</CommandList>
				<OnEventList>
					<OnEvent>
						<FunctionName>VarStatusSynt</FunctionName>
						<FunctionDes>接收作为子对象的变量的值变化事件（只关心状态变化）,执行有关数据质量的统计操作</FunctionDes>
						<EventInputList><SubObjectEventInput>
								<SubObjectName>.[::Variable]</SubObjectName>
								<OutEventRef>ValueChanged</OutEventRef>
								<Impact>类级</Impact>
							</SubObjectEventInput>
						</EventInputList>
						<TimerInputList/>
						<EventProcessMode>同步</EventProcessMode>
						<comment>对于设备类派生类，会自动建立相应子对象的值变化事件和该接收事件的回调关系</comment>
					</OnEvent>
					<OnEvent>
						<FunctionName>SubEQForcedSynt</FunctionName>
						<FunctionDes>接收作为子对象的设备的强制统计值变化事件,执行相应的统计操作</FunctionDes>
						<EventInputList><SubObjectEventInput>
								<SubObjectName>.[::EQ]</SubObjectName>
								<OutEventRef>ForcedSyntChange</OutEventRef>
								<Impact>类级</Impact>
							</SubObjectEventInput>
						</EventInputList>
						<TimerInputList/>
						<EventProcessMode>同步</EventProcessMode>
						<comment>对于设备类派生类，会自动建立相应子对象的强制统计值变化事件和该接收事件的回调关系</comment>
					</OnEvent>
					<OnEvent>
						<FunctionName>SubEQInvalidSynt</FunctionName>
						<FunctionDes>接收作为子对象的设备的无效变量统计值变化事件,执行相应的统计操作</FunctionDes>
						<EventInputList><SubObjectEventInput>
								<SubObjectName>.[::EQ]</SubObjectName>
								<OutEventRef>InvalidSyntChange</OutEventRef>
								<Impact>类级</Impact>
							</SubObjectEventInput>
						</EventInputList>
						<TimerInputList/>
						<EventProcessMode>同步</EventProcessMode>
						<comment>对于设备类派生类，会自动建立相应子对象的无效变量统计值变化事件和该接收事件的回调关系</comment>
					</OnEvent>
					<OnEvent>
						<FunctionName>VarAlarmSynt</FunctionName>
						<FunctionDes>接收作为子对象的变量所组合的报警点的报警状态变化事件,执行有关报警的统计操作</FunctionDes>
						<EventInputList><SubObjectEventInput>
								<SubObjectName>.[::Variable].[::ALM]</SubObjectName>
								<OutEventRef>AlarmStatusChanged</OutEventRef>
								<Impact>类级</Impact>
							</SubObjectEventInput>
						</EventInputList>
						<TimerInputList/>
						<EventProcessMode>同步</EventProcessMode>
						<comment>对于设备类派生类，会自动建立相应子对象所组合的报警点的报警状态变化事件和该接收事件的回调关系</comment>
					</OnEvent>
					<OnEvent>
						<FunctionName>SubEQAlarmSynt</FunctionName>
						<FunctionDes>响应子对象设备的综合报警统计值变化事件，执行有关报警的统计操作</FunctionDes>
						<EventInputList><SubObjectEventInput>
								<SubObjectName>.[::EQ]</SubObjectName>
								<OutEventRef>AlarmSyntChange</OutEventRef>
								<Impact>类级</Impact>
							</SubObjectEventInput>
						</EventInputList>
						<TimerInputList/>
						<EventProcessMode>同步</EventProcessMode>
						<comment>对于设备类派生类，会自动建立相应子对象的综合报警统计值变化事件和该接收事件的回调关系</comment>
					</OnEvent>
				</OnEventList>
				<ReDefOnEventList/>
				<OutEventList>
					<OutEvent>
						<FunctionName>AlarmSyntChange</FunctionName>
						<FunctionDes>综合报警个数变化事件</FunctionDes>
						<comment/>
						<ParamMode>公共参数表引用</ParamMode>
						<CommonParamTableRef GlobalName="SyntChange_P" RefVersion="1"/>
					</OutEvent>
					<OutEvent>
						<FunctionName>ForcedSyntChange</FunctionName>
						<FunctionDes>综合强制状态变化事件</FunctionDes>
						<comment/>
						<ParamMode>公共参数表引用</ParamMode>
						<CommonParamTableRef GlobalName="SyntChange_P" RefVersion="1"/>
					</OutEvent>
					<OutEvent>
						<FunctionName>InvalidSyntChange</FunctionName>
						<FunctionDes>综合无效状态变化事件</FunctionDes>
						<comment/>
						<ParamMode>公共参数表引用</ParamMode>
						<CommonParamTableRef GlobalName="SyntChange_P" RefVersion="1"/>
					</OutEvent>
				</OutEventList>
				<VirtualInterfaceList/>
				<OverLoadList>
					<OverLoad>
						<ClassRef>POINT</ClassRef>
						<FunctionName>sync_period</FunctionName><FuncType>虚函数</FuncType>
						<Des>EQ类及其派生类的所有实时项同步周期均为基准周期的2倍</Des>
					</OverLoad>
				</OverLoadList>
				<ClassBehaviorVersion>1244082235</ClassBehaviorVersion>
			</ClassBehavior>
		</Class>
	</ClassList>
</ClassFamily>
