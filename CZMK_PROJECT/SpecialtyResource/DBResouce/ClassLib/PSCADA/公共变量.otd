<?xml version="1.0" encoding="GB2312"?><!-- edited with XMLSpy v2005 rel. 3 U (http://www.altova.com) by  () --><ClassFamily SchemaVersion="20050920" CreateDate="2006-03-28" Creator="LIZHIJUN">
	<ClassFamilyName>公共变量</ClassFamilyName>
	<Des/>
	<ClassFamilyInfo>
		<Include>IncludeFile</Include>
		<DLL>PSCADA_Common</DLL>
	</ClassFamilyInfo>
	<ClassFamilyVersion>1307925307</ClassFamilyVersion>
	<comment/>
	<ClassList>
		<Class CreateDate="2006-05-19" Creator="LIZHIJUN">
			<ClassID Description="电力系统公共库的设备类,继承PSCADA类库中的EQ_Ctrl可控设备类。" Name="EQ_Ctrl_PSCADA" TagName="电力系统远程监控设备类" GlobalName="PSCADA_EQ_Ctrl_PSCADA"/>
			<ClassInfo>
				<BaseClassRef GlobalName="EQ_Ctrl" RefVersion="1"/>
				<Instanteable>不可实例化</Instanteable>
			</ClassInfo>
			<ClassVersion>1306306497</ClassVersion>
			<comment>
			</comment>
			<ClassPropertyList>
				<ClassPropertyVersion>1302769978</ClassPropertyVersion>
				<ClassProperty>
					<ClassPropertyID Description="" TagName="设备通讯状态" Name="devComStatus"/>
					<comment/>
					<PropertyProcessChar>
						<StoreChar>自动</StoreChar>
						<EditChar>可组态</EditChar>
						<VisibleChar>可视</VisibleChar>
						<RealTimeChar>实时项</RealTimeChar>
					</PropertyProcessChar>
					<Size>1</Size>
					<ValueType>子对象</ValueType>
					<SubObjClassRef GlobalName="::DI" RefVersion="1"/>
				</ClassProperty>
				<ClassProperty>
					<ClassPropertyID Description="" TagName="故障报警综合" Name="faultAlarmSyn"/>
					<comment/>
					<PropertyProcessChar>
						<StoreChar>自动</StoreChar>
						<EditChar>不可组态</EditChar>
						<VisibleChar>可视</VisibleChar>
						<RealTimeChar>实时项</RealTimeChar>
					</PropertyProcessChar>
					<Size>1</Size>
					<ValueType>基本数据类型</ValueType>
					<BasicType>
						<TypeName>INT8</TypeName>
						<Default/>
						<Min/>
						<Max/>
						<Enum/>
					</BasicType>
				</ClassProperty>
				<ClassProperty>
					<ClassPropertyID Description="" TagName="预告报警综合" Name="preAlarmSyn"/>
					<comment/>
					<PropertyProcessChar>
						<StoreChar>自动</StoreChar>
						<EditChar>不可组态</EditChar>
						<VisibleChar>可视</VisibleChar>
						<RealTimeChar>实时项</RealTimeChar>
					</PropertyProcessChar>
					<Size>1</Size>
					<ValueType>基本数据类型</ValueType>
					<BasicType>
						<TypeName>INT8</TypeName>
						<Default/>
						<Min/>
						<Max/>
						<Enum/>
					</BasicType>
				</ClassProperty>
				<ClassProperty>
					<ClassPropertyID Description="" Name="openInterLock" TagName="分闸操作连锁"/>
					<comment>分闸操作连锁</comment>
					<PropertyProcessChar>
						<StoreChar>自动</StoreChar>
						<EditChar>不可组态</EditChar>
						<VisibleChar>可视</VisibleChar>
						<RealTimeChar>实时项</RealTimeChar>
					</PropertyProcessChar>
					<Size>1</Size>
					<ValueType>基本数据类型</ValueType>
					<BasicType>
						<TypeName>INT8</TypeName>
						<Default/>
						<Min/>
						<Max/>
						<Enum/>
					</BasicType>
				</ClassProperty>
				<ClassProperty>
					<ClassPropertyID Description="" Name="closeInterLock" TagName="合闸操作连锁"/>
					<comment>合闸操作连锁</comment>
					<PropertyProcessChar>
						<StoreChar>自动</StoreChar>
						<EditChar>不可组态</EditChar>
						<VisibleChar>可视</VisibleChar>
						<RealTimeChar>实时项</RealTimeChar>
					</PropertyProcessChar>
					<Size>1</Size>
					<ValueType>基本数据类型</ValueType>
					<BasicType>
						<TypeName>INT8</TypeName>
						<Default/>
						<Min/>
						<Max/>
						<Enum/>
					</BasicType>
				</ClassProperty>
				<ClassProperty>
					<ClassPropertyID Description="对该设备的遥控分次数、遥控分成功次数和遥控分成功率的统计。" Name="statOpen" TagName="遥控分统计"/>
					<comment/>
					<PropertyProcessChar>
						<StoreChar>自动</StoreChar>
						<EditChar>可组态</EditChar>
						<VisibleChar>可视</VisibleChar>
						<RealTimeChar>实时项</RealTimeChar>
					</PropertyProcessChar>
					<Size>1</Size>
					<ValueType>子对象</ValueType>
					<SubObjClassRef GlobalName="Stat_Accu_Control" RefVersion="1"/>
				</ClassProperty>
				<ClassProperty>
					<ClassPropertyID Description="对该设备的遥控合次数、遥控合成功次数和遥控合成功率的统计。" TagName="遥控合统计" Name="statClose"/>
					<comment/>
					<PropertyProcessChar>
						<StoreChar>自动</StoreChar>
						<EditChar>可组态</EditChar>
						<VisibleChar>可视</VisibleChar>
						<RealTimeChar>实时项</RealTimeChar>
					</PropertyProcessChar>
					<Size>1</Size>
					<ValueType>子对象</ValueType>
					<SubObjClassRef GlobalName="Stat_Accu_Control" RefVersion="1"/>
				</ClassProperty>
				<ClassProperty>
					<ClassPropertyID Description="指定devComStatus属性的0/1哪个值表示故障状态。" Name="comFaultValue" TagName="设备通讯故障值"/>
					<comment/>
					<PropertyProcessChar>
						<StoreChar>自动</StoreChar>
						<EditChar>可组态</EditChar>
						<VisibleChar>可视</VisibleChar>
						<RealTimeChar>参数项</RealTimeChar>
					</PropertyProcessChar>
					<Size>1</Size>
					<ValueType>基本数据类型</ValueType>
					<BasicType>
						<TypeName>INT8</TypeName>
						<Default>1</Default>
						<Min>0</Min>
						<Max>1</Max>
						<Enum/>
					</BasicType>
				</ClassProperty>
				<ClassProperty><ClassPropertyID Description="用于存储存储操作状态" TagName="操作状态" Name="Status"/>
					<comment/>
					<PropertyProcessChar>
						<StoreChar>自动</StoreChar>
						<EditChar>不可组态</EditChar>
						<VisibleChar>可视</VisibleChar>
						<RealTimeChar>实时项</RealTimeChar>
					</PropertyProcessChar>
					<Size>1</Size>
					<ValueType>基本数据类型</ValueType>
					<BasicType><TypeName>INT8</TypeName><Default></Default><Min></Min><Max></Max><Enum/></BasicType></ClassProperty>
				<ClassProperty><ClassPropertyID Description="操作提示,提示操作信息" TagName="操作提示" Name="Tip"/>
					<comment/>
					<PropertyProcessChar>
						<StoreChar>自动</StoreChar>
						<EditChar>不可组态</EditChar>
						<VisibleChar>可视</VisibleChar>
						<RealTimeChar>实时项</RealTimeChar>
					</PropertyProcessChar>
					<Size>1</Size>
					<ValueType>基本数据类型</ValueType>
					<BasicType><TypeName>STRING256</TypeName><Default></Default><Min></Min><Max></Max><Enum/></BasicType></ClassProperty>
				<ClassProperty><ClassPropertyID Description="根据所组态的名称，建立逻辑的链接。" TagName="控制逻辑对象名" Name="ControlLogicName"/>
					<comment>必须组态正确的控制逻辑点点名，否则无法是实现遥控功能</comment>
					<PropertyProcessChar>
						<StoreChar>自动</StoreChar>
						<EditChar>可组态</EditChar>
						<VisibleChar>可视</VisibleChar>
						<RealTimeChar>参数项</RealTimeChar>
					</PropertyProcessChar>
					<Size>1</Size>
					<ValueType>基本数据类型</ValueType>
					<BasicType><TypeName>STRING32</TypeName><Default></Default><Min></Min><Max></Max><Enum/></BasicType></ClassProperty>
				<ClassProperty><ClassPropertyID Description="" Name="Step" TagName="执行状态"/>
					<comment/>
					<PropertyProcessChar>
						<StoreChar>自动</StoreChar>
						<EditChar>不可组态</EditChar>
						<VisibleChar>可视</VisibleChar>
						<RealTimeChar>实时项</RealTimeChar>
					</PropertyProcessChar>
					<Size>1</Size>
					<ValueType>基本数据类型</ValueType>
					<BasicType><TypeName>INT8</TypeName><Default></Default><Min></Min><Max></Max><Enum/></BasicType></ClassProperty></ClassPropertyList>
			<ClassBehavior>
				<CommandList>
					<Command>
						<FunctionName>Enable</FunctionName>
						<FunctionDes>Enable</FunctionDes>
						<comment>判断使能命令</comment>
						<FuncParamTable>
							<FuncParamItem>
								<Name>user</Name>
								<Des>操作员名</Des>
								<ValueType>string</ValueType>
								<TransDirection>in</TransDirection>
								<comment/>
							</FuncParamItem>
							<FuncParamItem>
								<Name>pid</Name>
								<Des>被控点的点号</Des>
								<ValueType>long</ValueType>
								<TransDirection>in</TransDirection>
								<comment/>
							</FuncParamItem>
							<FuncParamItem>
								<Name>KeyWord</Name><Des>关键字</Des>
								<ValueType>string</ValueType>
								<TransDirection>in</TransDirection>
								<comment/>
							</FuncParamItem>
							<FuncParamItem>
								<Name>Type</Name><Des>判断类型</Des>
								<ValueType>long</ValueType>
								<TransDirection>in</TransDirection>
								<comment>0代表直接终止，1代表全部动作完终止。</comment>
							</FuncParamItem>
							<FuncParamItem>
								<Name>Para1</Name><Des>可选参数Para1,对应$PARA1</Des>
								<ValueType>string</ValueType>
								<TransDirection>in</TransDirection>
								<comment/>
							</FuncParamItem>
							<FuncParamItem>
								<Name>Para2</Name><Des>可选参数Para2,对应$PARA2</Des>
								<ValueType>string</ValueType>
								<TransDirection>in</TransDirection>
								<comment/>
							</FuncParamItem>
							<FuncParamItem>
								<Name>Para3</Name><Des>可选参数Para3,对应$PARA3</Des>
								<ValueType>string</ValueType>
								<TransDirection>in</TransDirection>
								<comment/>
							</FuncParamItem>
							<FuncParamItem>
								<Name>Para4</Name><Des>可选参数Para4,对应$PARA4</Des>
								<ValueType>string</ValueType>
								<TransDirection>in</TransDirection>
								<comment/>
							</FuncParamItem>
						</FuncParamTable>
						<ReturnValue>
							<Type>long</Type>
							<Des>0成功，-1失败</Des>
						</ReturnValue>
					</Command>
					<Command><FunctionName>RefreshConfig</FunctionName><FunctionDes>更新操作序列</FunctionDes>
						<comment>即时更新组态内容到操作序列.为调试用命令.</comment>
						<FuncParamTable>
							<FuncParamItem>
								<Name>user</Name>
								<Des>操作员名</Des>
								<ValueType>string</ValueType>
								<TransDirection>in</TransDirection>
								<comment/>
							</FuncParamItem>
							<FuncParamItem>
								<Name>pid</Name>
								<Des>被控点的点号</Des>
								<ValueType>long</ValueType>
								<TransDirection>in</TransDirection>
								<comment/>
							</FuncParamItem>
						</FuncParamTable>
						<ReturnValue>
							<Type>long</Type>
							<Des>0成功，-1失败</Des>
						</ReturnValue>
					</Command>
					<Command><FunctionName>IExecute</FunctionName><FunctionDes>IExecute</FunctionDes>
						<comment>根据组态的条件和动作进行定值组切换操作</comment>
						<FuncParamTable>
							<FuncParamItem>
								<Name>user</Name>
								<Des>操作员名</Des>
								<ValueType>string</ValueType>
								<TransDirection>in</TransDirection>
								<comment/>
							</FuncParamItem>
							<FuncParamItem>
								<Name>pid</Name>
								<Des>被控点的点号</Des>
								<ValueType>long</ValueType>
								<TransDirection>in</TransDirection>
								<comment/>
							</FuncParamItem>
							<FuncParamItem>
								<Name>KeyOpName</Name><Des>动作关键字，与各类条件中匹配。</Des>
								<ValueType>string</ValueType>
								<TransDirection>in</TransDirection>
								<comment/>
							</FuncParamItem>
							<FuncParamItem>
								<Name>Type</Name><Des>动作类型，决定执行的类型。</Des>
								<ValueType>long</ValueType>
								<TransDirection>in</TransDirection>
								<comment>0代表直接终止，1代表全部动作完终止。</comment>
							</FuncParamItem>
							<FuncParamItem>
								<Name>ExeType</Name><Des>执行类型，需要禁止执行的表达式类型，以及是否输出操作日志。
</Des>
								<ValueType>long</ValueType>
								<TransDirection>in</TransDirection>
								<comment>使能判断条件=1
许可检查条件=2
输出表达式=4
返校表达式=8
操作日志=16
默认0表示四种表达式都要执行且输出操作日志；
4表示禁止执行输出表达式；
12表示禁止执行输出表达式和返校表达式；
16表示禁止输出操作日志。
</comment>
							</FuncParamItem>
							<FuncParamItem>
								<Name>LogPrefix</Name><Des>日志前缀,用于区分单遥，程控，顺控等</Des>
								<ValueType>string</ValueType>
								<TransDirection>in</TransDirection>
								<comment/>
							</FuncParamItem>
							<FuncParamItem>
								<Name>Para1</Name><Des>可选参数，组态用$PARA1表示</Des>
								<ValueType>string</ValueType>
								<TransDirection>in</TransDirection>
								<comment/>
							</FuncParamItem>
							<FuncParamItem>
								<Name>Para2</Name><Des>可选参数，组态用$PARA2表示</Des>
								<ValueType>string</ValueType>
								<TransDirection>in</TransDirection>
								<comment/>
							</FuncParamItem>
							<FuncParamItem>
								<Name>Para3</Name><Des>可选参数，组态用$PARA3表示</Des>
								<ValueType>string</ValueType>
								<TransDirection>in</TransDirection>
								<comment/>
							</FuncParamItem>
							<FuncParamItem>
								<Name>Para4</Name><Des>可选参数，组态用$PARA4表示</Des>
								<ValueType>string</ValueType>
								<TransDirection>in</TransDirection>
								<comment/>
							</FuncParamItem>
						</FuncParamTable>
						<ReturnValue>
							<Type>long</Type>
							<Des>0成功，-1失败</Des>
						</ReturnValue>
					</Command>
					<Command><FunctionName>AutoExecute</FunctionName><FunctionDes>AutoExecute</FunctionDes>
						<comment>根据当前状态，自动选择要执行的命令。</comment>
						<FuncParamTable>
							<FuncParamItem>
								<Name>user</Name>
								<Des>操作员名</Des>
								<ValueType>string</ValueType>
								<TransDirection>in</TransDirection>
								<comment/>
							</FuncParamItem>
							<FuncParamItem>
								<Name>pid</Name>
								<Des>被控点的点号</Des>
								<ValueType>long</ValueType>
								<TransDirection>in</TransDirection>
								<comment/>
							</FuncParamItem>
							<FuncParamItem>
								<Name>KeyOpName</Name><Des>动作关键字，与各类条件中匹配。</Des>
								<ValueType>string</ValueType>
								<TransDirection>in</TransDirection>
								<comment/>
							</FuncParamItem>
							<FuncParamItem>
								<Name>Type</Name><Des>动作类型，决定执行的类型。</Des>
								<ValueType>long</ValueType>
								<TransDirection>in</TransDirection>
								<comment>0代表直接终止，1代表全部动作完终止。</comment>
							</FuncParamItem>
							<FuncParamItem>
								<Name>ExeType</Name><Des>执行类型，需要禁止执行的表达式类型，以及是否输出操作日志。
</Des>
								<ValueType>long</ValueType>
								<TransDirection>in</TransDirection>
								<comment>使能判断条件=1
许可检查条件=2
输出表达式=4
返校表达式=8
操作日志=16
默认0表示四种表达式都要执行且输出操作日志；
4表示禁止执行输出表达式；
12表示禁止执行输出表达式和返校表达式；
16表示禁止输出操作日志。
</comment>
							</FuncParamItem>
							<FuncParamItem>
								<Name>LogPrefix</Name><Des>日志前缀，用于区分单遥，程控，顺控等</Des>
								<ValueType>string</ValueType>
								<TransDirection>in</TransDirection>
								<comment/>
							</FuncParamItem>
							<FuncParamItem>
								<Name>Para1</Name><Des>可选参数，组态用$PARA1表示</Des>
								<ValueType>string</ValueType>
								<TransDirection>in</TransDirection>
								<comment/>
							</FuncParamItem>
							<FuncParamItem>
								<Name>Para2</Name><Des>可选参数，组态用$PARA2表示</Des>
								<ValueType>string</ValueType>
								<TransDirection>in</TransDirection>
								<comment/>
							</FuncParamItem>
							<FuncParamItem>
								<Name>Para3</Name><Des>可选参数，组态用$PARA3表示</Des>
								<ValueType>string</ValueType>
								<TransDirection>in</TransDirection>
								<comment/>
							</FuncParamItem>
							<FuncParamItem>
								<Name>Para4</Name><Des>可选参数，组态用$PARA4表示</Des>
								<ValueType>string</ValueType>
								<TransDirection>in</TransDirection>
								<comment/>
							</FuncParamItem>
						</FuncParamTable>
						<ReturnValue>
							<Type>long</Type>
							<Des>0成功，-1失败</Des>
						</ReturnValue>
					</Command></CommandList>
				<OnEventList>
					<OnEvent>
						<FunctionName>AlarmSynSum</FunctionName>
						<FunctionDes>报警综合计数。接收所有类型为“DI”的子对象的ALM子对象的AlarmStatusChanged事件。
根据报警级又可以分为“故障类报警”和“预告类报警”。</FunctionDes>
						<EventInputList>
							<SubObjectEventInput>
								<SubObjectName>.[::DI].[::ALM]</SubObjectName>
								<OutEventRef>AlarmStatusChanged</OutEventRef>
								<Impact>类级</Impact>
							</SubObjectEventInput>
						</EventInputList>
						<TimerInputList/>
						<EventProcessMode>同步</EventProcessMode>
						<comment>ALM_AlarmStatusChanged_P自定义参数表中的参数项curStatus（当前报警状态）如果为报警，“故障报警综合”＋1，如果为报警恢复，“故障报警综合”－1。再执行故障报警综合计数改变（FaultAlarmSynChanged）输出事件。
ALM_AlarmStatusChanged_P自定义参数表中的参数项curStatus（当前报警状态）如果为报警，“预告报警综合”＋1，如果为报警恢复，“预告报警综合”－1。再执行预告报警综合计数改变（PreAlarmSynChanged）输出事件。</comment>
					</OnEvent>
					<OnEvent>
						<FunctionName>SubPreAlarmSynt</FunctionName>
						<FunctionDes>接收作为子对象的预告类报警点的报警状态变化事件,执行有关预告类报警的统计操作</FunctionDes>
						<EventInputList>
							<SubObjectEventInput>
								<SubObjectName>.[PSCADA::EQ_Ctrl_PSCADA]</SubObjectName>
								<OutEventRef>PreAlarmSynChanged</OutEventRef>
								<Impact>类级</Impact>
							</SubObjectEventInput>
						</EventInputList>
						<TimerInputList/>
						<EventProcessMode>同步</EventProcessMode>
						<comment>接收作为子对象的预告类报警点的报警状态变化事件,执行有关预告类报警的统计操作</comment>
					</OnEvent>
					<OnEvent>
						<FunctionName>SubFaultAlarmSynt</FunctionName>
						<FunctionDes>接收作为子对象的故障类报警点的报警状态变化事件,执行有关故障类报警的统计操作</FunctionDes>
						<EventInputList>
							<SubObjectEventInput>
								<SubObjectName>.[PSCADA::EQ_Ctrl_PSCADA]</SubObjectName>
								<OutEventRef>FaultAlarmSynChanged</OutEventRef>
								<Impact>类级</Impact>
							</SubObjectEventInput>
						</EventInputList>
						<TimerInputList/>
						<EventProcessMode>同步</EventProcessMode>
						<comment>接收作为子对象的故障类报警点的报警状态变化事件,执行有关故障类报警的统计操作</comment>
					</OnEvent>
				</OnEventList>
				<ReDefOnEventList>
					<OnEvent ReDefine="ReDefine">
						<FunctionName>VarStatusSynt</FunctionName>
						<FunctionDes>接收作为子对象的变量的值变化事件（只关心状态变化）,执行有关数据质量的统计操作</FunctionDes>
						<EventInputList>
							<SubObjectEventInput Templet="Templet"><SubObjectName>devComStatus</SubObjectName><OutEventRef>ValueChanged</OutEventRef><Impact>类级</Impact></SubObjectEventInput></EventInputList>
						<TimerInputList/>
						<EventProcessMode>同步</EventProcessMode>
						<comment>对于设备类派生类，会自动建立相应子对象的值变化事件和该接收事件的回调关系</comment>
					</OnEvent>
					<OnEvent ReDefine="ReDefine">
						<FunctionName>VarAlarmSynt</FunctionName>
						<FunctionDes>接收作为子对象的变量所组合的报警点的报警状态变化事件,执行有关报警的统计操作</FunctionDes>
						<EventInputList>
							<SubObjectEventInput Templet="Templet"><SubObjectName>devComStatus.cosAlarm</SubObjectName><OutEventRef>AlarmStatusChanged</OutEventRef><Impact>类级</Impact></SubObjectEventInput></EventInputList>
						<TimerInputList/>
						<EventProcessMode>同步</EventProcessMode>
						<comment>对于设备类派生类，会自动建立相应子对象所组合的报警点的报警状态变化事件和该接收事件的回调关系</comment>
					</OnEvent>
				</ReDefOnEventList>
				<OutEventList>
					<OutEvent>
						<FunctionName>DevComStatusChanged</FunctionName>
						<FunctionDes>设备通讯状态改变</FunctionDes>
						<comment/>
						<ParamMode>公共参数表引用</ParamMode>
						<CommonParamTableRef GlobalName="::SyntChange_P" RefVersion="1"/>
					</OutEvent>
					<OutEvent>
						<FunctionName>FaultAlarmSynChanged</FunctionName>
						<FunctionDes>故障报警综合计数改变</FunctionDes>
						<comment/>
						<ParamMode>公共参数表引用</ParamMode>
						<CommonParamTableRef GlobalName="::SyntChange_P" RefVersion="1"/>
					</OutEvent>
					<OutEvent>
						<FunctionName>PreAlarmSynChanged</FunctionName>
						<FunctionDes>预告报警综合计数改变</FunctionDes>
						<comment/>
						<ParamMode>公共参数表引用</ParamMode>
						<CommonParamTableRef GlobalName="::SyntChange_P" RefVersion="1"/>
					</OutEvent>
				</OutEventList>
				<VirtualInterfaceList/>
				<OverLoadList>
					<OverLoad>
						<ClassRef>::POINT</ClassRef>
						<FunctionName>do_setItem</FunctionName>
						<FuncType>虚函数</FuncType>
						<Des>屏蔽状态，接地牌/检修牌/禁止牌变化时输出相应的值变化事件。</Des>
					</OverLoad>
					<OverLoad>
						<ClassRef>EQ_Ctrl</ClassRef>
						<FunctionName>CtrlLock_Inter</FunctionName>
						<FuncType>虚函数</FuncType>
						<Des>只有有遥控操作权限的操作员且开关的控制权在此地才可以进行控制闭锁/解除控制闭锁操作。控制闭锁是将该设备的ctrlLockStatus置1，解除控制闭锁是将该设备的ctrlLockStatus置0。</Des>
					</OverLoad>
					<OverLoad>
						<ClassRef>EQ_Ctrl</ClassRef>
						<FunctionName>GetComFaultName</FunctionName>
						<FuncType>虚函数</FuncType>
						<Des>指定设备通讯状态子对象为devComStatus</Des>
					</OverLoad>
					<OverLoad>
						<ClassRef>EQ_Ctrl</ClassRef>
						<FunctionName>AfterSuc</FunctionName>
						<FuncType>虚函数</FuncType>
						<Des>执行操作返信成功，要根据返信结果，进行遥控分闸/合闸成功率的统计</Des>
					</OverLoad>
					<OverLoad>
						<ClassRef>EQ_Ctrl</ClassRef>
						<FunctionName>AfterSetChannel</FunctionName>
						<FuncType>虚函数</FuncType>
						<Des>执行命令下发后，要进行遥控次数的统计</Des>
					</OverLoad>
					<OverLoad>
						<ClassRef>EQ_Ctrl</ClassRef>
						<FunctionName>AfterFail</FunctionName>
						<FuncType>虚函数</FuncType>
						<Des>执行操作返信失败，要根据返信结果，进行遥控分闸/合闸成功率的统计</Des>
					</OverLoad>
					<OverLoad>
						<ClassRef>EQ_Ctrl</ClassRef>
						<FunctionName>IsComFault</FunctionName>
						<FuncType>虚函数</FuncType>
						<Des>根据设备通讯故障值判断</Des>
					</OverLoad>
					<OverLoad>
						<ClassRef>::POINT</ClassRef>
						<FunctionName>initialize</FunctionName><FuncType>虚函数</FuncType>
						<Des>初始化,建立遥控逻辑和本类的联系.</Des>
					</OverLoad>
				</OverLoadList>
				<ClassBehaviorVersion>1306306497</ClassBehaviorVersion>
			</ClassBehavior>
		</Class>
		<Class CreateDate="2006-05-23" Creator="LIZHIJUN">
			<ClassID Description="电力系统公共库的设备类,继承于基础类库的EQ类." TagName="电力系统远程监视设备类" Name="EQ_Mon_PSCADA" GlobalName="PSCADA_EQ_Mon_PSCADA"/>
			<ClassInfo>
				<BaseClassRef GlobalName="::EQ" RefVersion="1"/>
				<Instanteable>不可实例化</Instanteable>
			</ClassInfo>
			<ClassVersion>1300861490</ClassVersion>
			<comment>
			</comment>
			<ClassPropertyList>
				<ClassPropertyVersion>1230272238</ClassPropertyVersion>
				<ClassProperty>
					<ClassPropertyID Description="" TagName="设备通讯状态" Name="devComStatus"/>
					<comment/>
					<PropertyProcessChar>
						<StoreChar>自动</StoreChar>
						<EditChar>可组态</EditChar>
						<VisibleChar>可视</VisibleChar>
						<RealTimeChar>实时项</RealTimeChar>
					</PropertyProcessChar>
					<Size>1</Size>
					<ValueType>子对象</ValueType>
					<SubObjClassRef GlobalName="::DI" RefVersion="1"/>
				</ClassProperty>
				<ClassProperty>
					<ClassPropertyID Description="" TagName="故障报警综合" Name="faultAlarmSyn"/>
					<comment/>
					<PropertyProcessChar>
						<StoreChar>自动</StoreChar>
						<EditChar>不可组态</EditChar>
						<VisibleChar>可视</VisibleChar>
						<RealTimeChar>实时项</RealTimeChar>
					</PropertyProcessChar>
					<Size>1</Size>
					<ValueType>基本数据类型</ValueType>
					<BasicType>
						<TypeName>INT8</TypeName>
						<Default/>
						<Min/>
						<Max/>
						<Enum/>
					</BasicType>
				</ClassProperty>
				<ClassProperty>
					<ClassPropertyID Description="" TagName="预告报警综合" Name="preAlarmSyn"/>
					<comment/>
					<PropertyProcessChar>
						<StoreChar>自动</StoreChar>
						<EditChar>不可组态</EditChar>
						<VisibleChar>可视</VisibleChar>
						<RealTimeChar>实时项</RealTimeChar>
					</PropertyProcessChar>
					<Size>1</Size>
					<ValueType>基本数据类型</ValueType>
					<BasicType>
						<TypeName>INT8</TypeName>
						<Default/>
						<Min/>
						<Max/>
						<Enum/>
					</BasicType>
				</ClassProperty>
			</ClassPropertyList>
			<ClassBehavior>
				<CommandList>
					<Command>
						<FunctionName>SignReset</FunctionName>
						<FunctionDes>信号复归</FunctionDes>
						<comment>只有有遥控操作权限的操作员且开关的控制权在此地才可以进行信号复归操作。信号复归操作是根据保持要求将本设备中所有类型为DI_Hold类型子对象的value值复归。 
</comment>
						<FuncParamTable>
							<FuncParamItem>
								<Name>user</Name>
								<Des>操作员名</Des>
								<ValueType>string</ValueType>
								<TransDirection>in</TransDirection>
								<comment/>
							</FuncParamItem>
							<FuncParamItem>
								<Name>pid</Name>
								<Des>被控点的点号</Des>
								<ValueType>long</ValueType>
								<TransDirection>in</TransDirection>
								<comment/>
							</FuncParamItem>
						</FuncParamTable>
						<ReturnValue>
							<Type>long</Type>
							<Des>0成功，-1失败</Des>
						</ReturnValue>
					</Command>
				</CommandList>
				<OnEventList>
					<OnEvent>
						<FunctionName>AlarmSynSum</FunctionName>
						<FunctionDes>报警综合计数。接收所有类型为“DI”的子对象的ALM子对象的AlarmStatusChanged事件。
根据报警级又可以分为“故障类报警”和“预告类报警”。</FunctionDes>
						<EventInputList>
							<SubObjectEventInput>
								<SubObjectName>.[::DI].[::ALM]</SubObjectName>
								<OutEventRef>AlarmStatusChanged</OutEventRef>
								<Impact>类级</Impact>
							</SubObjectEventInput>
						</EventInputList>
						<TimerInputList/>
						<EventProcessMode>同步</EventProcessMode>
						<comment>ALM_AlarmStatusChanged_P自定义参数表中的参数项curStatus（当前报警状态）如果为报警，“故障报警综合”＋1，如果为报警恢复，“故障报警综合”－1。再执行故障报警综合计数改变（FaultAlarmSynChanged）输出事件。
ALM_AlarmStatusChanged_P自定义参数表中的参数项curStatus（当前报警状态）如果为报警，“预告报警综合”＋1，如果为报警恢复，“预告报警综合”－1。再执行预告报警综合计数改变（PreAlarmSynChanged）输出事件。</comment>
					</OnEvent>
				</OnEventList>
				<ReDefOnEventList>
					<OnEvent ReDefine="ReDefine">
						<FunctionName>VarStatusSynt</FunctionName>
						<FunctionDes>接收作为子对象的变量的值变化事件（只关心状态变化）,执行有关数据质量的统计操作</FunctionDes>
						<EventInputList>
							<SubObjectEventInput Templet="Templet"><SubObjectName>devComStatus</SubObjectName><OutEventRef>ValueChanged</OutEventRef><Impact>类级</Impact></SubObjectEventInput></EventInputList>
						<TimerInputList/>
						<EventProcessMode>同步</EventProcessMode>
						<comment>对于设备类派生类，会自动建立相应子对象的值变化事件和该接收事件的回调关系</comment>
					</OnEvent>
					<OnEvent ReDefine="ReDefine">
						<FunctionName>VarAlarmSynt</FunctionName>
						<FunctionDes>接收作为子对象的变量所组合的报警点的报警状态变化事件,执行有关报警的统计操作</FunctionDes>
						<EventInputList>
							<SubObjectEventInput Templet="Templet"><SubObjectName>devComStatus.cosAlarm</SubObjectName><OutEventRef>AlarmStatusChanged</OutEventRef><Impact>类级</Impact></SubObjectEventInput></EventInputList>
						<TimerInputList/>
						<EventProcessMode>同步</EventProcessMode>
						<comment>对于设备类派生类，会自动建立相应子对象所组合的报警点的报警状态变化事件和该接收事件的回调关系</comment>
					</OnEvent>
				</ReDefOnEventList>
				<OutEventList>
					<OutEvent>
						<FunctionName>DevComStatusChanged</FunctionName>
						<FunctionDes>设备通讯状态改变</FunctionDes>
						<comment/>
						<ParamMode>公共参数表引用</ParamMode>
						<CommonParamTableRef GlobalName="::SyntChange_P" RefVersion="1"/>
					</OutEvent>
					<OutEvent>
						<FunctionName>FaultAlarmSynChanged</FunctionName>
						<FunctionDes>故障报警综合计数改变</FunctionDes>
						<comment/>
						<ParamMode>公共参数表引用</ParamMode>
						<CommonParamTableRef GlobalName="::SyntChange_P" RefVersion="1"/>
					</OutEvent>
					<OutEvent>
						<FunctionName>PreAlarmSynChanged</FunctionName>
						<FunctionDes>预告报警综合计数改变</FunctionDes>
						<comment/>
						<ParamMode>公共参数表引用</ParamMode>
						<CommonParamTableRef GlobalName="::SyntChange_P" RefVersion="1"/>
					</OutEvent>
				</OutEventList>
				<VirtualInterfaceList/>
				<OverLoadList/>
				<ClassBehaviorVersion>1300861490</ClassBehaviorVersion>
			</ClassBehavior>
		</Class>
		<Class CreateDate="2007-01-12" Creator="LIZHIJUN">
			<ClassID Description=" " Name="DI_Hold" TagName="具有保持功能的开关量输入点" GlobalName="PSCADA_DI_Hold"/>
			<ClassInfo>
				<BaseClassRef GlobalName="::DI" RefVersion="1"/>
				<Instanteable>可实例化</Instanteable>
			</ClassInfo>
			<ClassVersion>1283511342</ClassVersion>
			<comment>
			</comment>
			<ClassPropertyList>
				<ClassPropertyVersion>1243299909</ClassPropertyVersion>
				<ClassProperty>
					<ClassPropertyID Description="原始采集值" Name="ioValue" TagName="原始采集值"/>
					<comment/>
					<PropertyProcessChar>
						<StoreChar>自动</StoreChar>
						<EditChar>不可组态</EditChar>
						<VisibleChar>可视</VisibleChar>
						<RealTimeChar>实时项</RealTimeChar>
					</PropertyProcessChar>
					<Size>1</Size>
					<ValueType>基本数据类型</ValueType>
					<BasicType>
						<TypeName>INT8</TypeName>
						<Default/>
						<Min/>
						<Max/>
						<Enum/>
					</BasicType>
				</ClassProperty>
				<ClassProperty>
					<ClassPropertyID Description="0保持/1保持" Name="holdRequire" TagName="保持要求"/>
					<comment/>
					<PropertyProcessChar>
						<StoreChar>自动</StoreChar>
						<EditChar>可组态</EditChar>
						<VisibleChar>可视</VisibleChar>
						<RealTimeChar>参数项</RealTimeChar>
					</PropertyProcessChar>
					<Size>1</Size>
					<ValueType>基本数据类型</ValueType>
					<BasicType>
						<TypeName>INT8</TypeName>
						<Default/>
						<Min/>
						<Max/>
						<Enum/>
					</BasicType>
				</ClassProperty>
				<ClassProperty>
					<ClassPropertyID Description="" Name="ioValueTime" TagName="原始值采集时间"/>
					<comment/>
					<PropertyProcessChar>
						<StoreChar>自动</StoreChar>
						<EditChar>不可组态</EditChar>
						<VisibleChar>可视</VisibleChar>
						<RealTimeChar>实时项</RealTimeChar>
					</PropertyProcessChar>
					<Size>1</Size>
					<ValueType>基本数据类型</ValueType>
					<BasicType>
						<TypeName>TIME</TypeName>
						<Default/>
						<Min/>
						<Max/>
						<Enum/>
					</BasicType>
				</ClassProperty>
				<ClassProperty>
					<ClassPropertyID Description="" Name="previousIOValue" TagName="前次原始值"/>
					<comment/>
					<PropertyProcessChar>
						<StoreChar>自动</StoreChar>
						<EditChar>不可组态</EditChar>
						<VisibleChar>可视</VisibleChar>
						<RealTimeChar>实时项</RealTimeChar>
					</PropertyProcessChar>
					<Size>1</Size>
					<ValueType>基本数据类型</ValueType>
					<BasicType>
						<TypeName>INT8</TypeName>
						<Default/>
						<Min/>
						<Max/>
						<Enum/>
					</BasicType>
				</ClassProperty>
			</ClassPropertyList>
			<ClassBehavior>
				<CommandList>
					<Command>
						<FunctionName>SignReset</FunctionName>
						<FunctionDes>信号复归</FunctionDes>
						<comment>信号复归操作是将按保持要求保持的value值复归</comment>
						<FuncParamTable>
							<FuncParamItem>
								<Name>user</Name>
								<Des>操作员名</Des>
								<ValueType>string</ValueType>
								<TransDirection>in</TransDirection>
								<comment/>
							</FuncParamItem>
							<FuncParamItem>
								<Name>pid</Name>
								<Des>被控点的点号</Des>
								<ValueType>long</ValueType>
								<TransDirection>in</TransDirection>
								<comment/>
							</FuncParamItem>
						</FuncParamTable>
						<ReturnValue>
							<Type>long</Type>
							<Des>0成功，-1失败</Des>
						</ReturnValue>
					</Command>
					<Command><FunctionName>SignReset_Mirror</FunctionName><FunctionDes>镜像实时库之间信号复归的同步</FunctionDes>
						<comment>此接口不应被客户端调用，只用于实时库服务之间做数据同步</comment>
						<FuncParamTable>
							<FuncParamItem>
								<Name>node_id</Name>
								<Des>镜像实时库所在节点ID</Des>
								<ValueType>long</ValueType>
								<TransDirection>in</TransDirection>
								<comment/>
							</FuncParamItem>
							<FuncParamItem>
								<Name>pid</Name><Des>被控点的点号</Des>
								<ValueType>long</ValueType>
								<TransDirection>in</TransDirection>
								<comment/>
							</FuncParamItem>
						</FuncParamTable>
						<ReturnValue>
							<Type>long</Type>
							<Des>0成功，-1失败</Des>
						</ReturnValue>
					</Command></CommandList>
				<OnEventList/>
				<ReDefOnEventList/>
				<OutEventList/>
				<VirtualInterfaceList/>
				<OverLoadList>
					<OverLoad>
						<ClassRef>::POINT</ClassRef>
						<FunctionName>initialize</FunctionName>
						<FuncType>虚函数</FuncType>
						<Des>如果是0保持，则置value值为1，如果1保持，则置value值为0</Des>
					</OverLoad>
					<OverLoad>
						<ClassRef>::Variable</ClassRef>
						<FunctionName>DataScan</FunctionName>
						<FuncType>虚函数</FuncType>
						<Des/>
					</OverLoad>
					<OverLoad>
						<ClassRef>::POINT</ClassRef>
						<FunctionName>do_setItem</FunctionName>
						<FuncType>虚函数</FuncType>
						<Des/>
					</OverLoad>
				</OverLoadList>
				<ClassBehaviorVersion>1283511342</ClassBehaviorVersion>
			</ClassBehavior>
		</Class>
		<Class CreateDate="2007-01-12" Creator="LIZHIJUN">
			<ClassID Description="对设备的遥控分合操作的次数统计" Name="Stat_Accu_Control" TagName="遥控次数统计类" GlobalName="PSCADA_Stat_Accu_Control"/>
			<ClassInfo>
				<BaseClassRef GlobalName="::POINT" RefVersion="1"/>
				<Instanteable>可实例化</Instanteable>
			</ClassInfo>
			<ClassVersion>1230707474</ClassVersion>
			<comment>
			</comment>
			<ClassPropertyList>
				<ClassPropertyVersion>1228372877</ClassPropertyVersion>
				<ClassProperty>
					<ClassPropertyID Description="遥控次数包括遥控成功次数和遥控失败次数" Name="totalNum" TagName="遥控总次数"/>
					<comment/>
					<PropertyProcessChar>
						<StoreChar>自动</StoreChar>
						<EditChar>不可组态</EditChar>
						<VisibleChar>可视</VisibleChar>
						<RealTimeChar>实时项</RealTimeChar>
					</PropertyProcessChar>
					<Size>1</Size>
					<ValueType>基本数据类型</ValueType>
					<BasicType>
						<TypeName>UINT32</TypeName>
						<Default/>
						<Min/>
						<Max/>
						<Enum/>
					</BasicType>
				</ClassProperty>
				<ClassProperty>
					<ClassPropertyID Description="" TagName="遥控成功总次数" Name="succNum"/>
					<comment/>
					<PropertyProcessChar>
						<StoreChar>自动</StoreChar>
						<EditChar>不可组态</EditChar>
						<VisibleChar>可视</VisibleChar>
						<RealTimeChar>实时项</RealTimeChar>
					</PropertyProcessChar>
					<Size>1</Size>
					<ValueType>基本数据类型</ValueType>
					<BasicType>
						<TypeName>UINT32</TypeName>
						<Default/>
						<Min/>
						<Max/>
						<Enum/>
					</BasicType>
				</ClassProperty>
				<ClassProperty>
					<ClassPropertyID Description="" TagName="遥控成功月次数" Name="succNumMonth"/>
					<comment/>
					<PropertyProcessChar>
						<StoreChar>自动</StoreChar>
						<EditChar>不可组态</EditChar>
						<VisibleChar>可视</VisibleChar>
						<RealTimeChar>实时项</RealTimeChar>
					</PropertyProcessChar>
					<Size>1</Size>
					<ValueType>基本数据类型</ValueType>
					<BasicType>
						<TypeName>UINT32</TypeName>
						<Default/>
						<Min/>
						<Max/>
						<Enum/>
					</BasicType>
				</ClassProperty>
				<ClassProperty>
					<ClassPropertyID Description="遥控月次数包括当月遥控成功次数和遥控失败次数" TagName="遥控月次数" Name="totalNumMonth"/>
					<comment/>
					<PropertyProcessChar>
						<StoreChar>自动</StoreChar>
						<EditChar>不可组态</EditChar>
						<VisibleChar>可视</VisibleChar>
						<RealTimeChar>实时项</RealTimeChar>
					</PropertyProcessChar>
					<Size>1</Size>
					<ValueType>基本数据类型</ValueType>
					<BasicType>
						<TypeName>UINT32</TypeName>
						<Default/>
						<Min/>
						<Max/>
						<Enum/>
					</BasicType>
				</ClassProperty>
				<ClassProperty>
					<ClassPropertyID Description="" TagName="遥控成功年次数" Name="succNumYear"/>
					<comment/>
					<PropertyProcessChar>
						<StoreChar>自动</StoreChar>
						<EditChar>不可组态</EditChar>
						<VisibleChar>可视</VisibleChar>
						<RealTimeChar>实时项</RealTimeChar>
					</PropertyProcessChar>
					<Size>1</Size>
					<ValueType>基本数据类型</ValueType>
					<BasicType>
						<TypeName>UINT32</TypeName>
						<Default/>
						<Min/>
						<Max/>
						<Enum/>
					</BasicType>
				</ClassProperty>
				<ClassProperty>
					<ClassPropertyID Description="遥控年次数包括当年遥控成功次数和遥控失败次数" TagName="遥控年次数" Name="totalNumYear"/>
					<comment/>
					<PropertyProcessChar>
						<StoreChar>自动</StoreChar>
						<EditChar>不可组态</EditChar>
						<VisibleChar>可视</VisibleChar>
						<RealTimeChar>实时项</RealTimeChar>
					</PropertyProcessChar>
					<Size>1</Size>
					<ValueType>基本数据类型</ValueType>
					<BasicType>
						<TypeName>UINT32</TypeName>
						<Default/>
						<Min/>
						<Max/>
						<Enum/>
					</BasicType>
				</ClassProperty>
				<ClassProperty>
					<ClassPropertyID Description="" TagName="遥控成功日次数" Name="succNumDay"/>
					<comment/>
					<PropertyProcessChar>
						<StoreChar>自动</StoreChar>
						<EditChar>不可组态</EditChar>
						<VisibleChar>可视</VisibleChar>
						<RealTimeChar>实时项</RealTimeChar>
					</PropertyProcessChar>
					<Size>1</Size>
					<ValueType>基本数据类型</ValueType>
					<BasicType>
						<TypeName>UINT32</TypeName>
						<Default/>
						<Min/>
						<Max/>
						<Enum/>
					</BasicType>
				</ClassProperty>
				<ClassProperty>
					<ClassPropertyID Description="遥控日次数包括当日遥控成功次数和遥控失败次数" TagName="遥控日次数" Name="totalNumDay"/>
					<comment/>
					<PropertyProcessChar>
						<StoreChar>自动</StoreChar>
						<EditChar>不可组态</EditChar>
						<VisibleChar>可视</VisibleChar>
						<RealTimeChar>实时项</RealTimeChar>
					</PropertyProcessChar>
					<Size>1</Size>
					<ValueType>基本数据类型</ValueType>
					<BasicType>
						<TypeName>UINT32</TypeName>
						<Default/>
						<Min/>
						<Max/>
						<Enum/>
					</BasicType>
				</ClassProperty>
				<ClassProperty>
					<ClassPropertyID Description="" TagName="当前统计日" Name="statDay"/>
					<comment/>
					<PropertyProcessChar>
						<StoreChar>自动</StoreChar>
						<EditChar>不可组态</EditChar>
						<VisibleChar>不可视</VisibleChar>
						<RealTimeChar>实时项</RealTimeChar>
					</PropertyProcessChar>
					<Size>1</Size>
					<ValueType>基本数据类型</ValueType>
					<BasicType>
						<TypeName>INT8</TypeName>
						<Default/>
						<Min/>
						<Max/>
						<Enum/>
					</BasicType>
				</ClassProperty>
				<ClassProperty>
					<ClassPropertyID Description="" TagName="当前统计月份" Name="statMonth"/>
					<comment/>
					<PropertyProcessChar>
						<StoreChar>自动</StoreChar>
						<EditChar>不可组态</EditChar>
						<VisibleChar>不可视</VisibleChar>
						<RealTimeChar>实时项</RealTimeChar>
					</PropertyProcessChar>
					<Size>1</Size>
					<ValueType>基本数据类型</ValueType>
					<BasicType>
						<TypeName>INT8</TypeName>
						<Default/>
						<Min/>
						<Max/>
						<Enum/>
					</BasicType>
				</ClassProperty>
				<ClassProperty>
					<ClassPropertyID Description="" TagName="当前统计年份" Name="statYear"/>
					<comment/>
					<PropertyProcessChar>
						<StoreChar>自动</StoreChar>
						<EditChar>不可组态</EditChar>
						<VisibleChar>不可视</VisibleChar>
						<RealTimeChar>实时项</RealTimeChar>
					</PropertyProcessChar>
					<Size>1</Size>
					<ValueType>基本数据类型</ValueType>
					<BasicType>
						<TypeName>INT16</TypeName>
						<Default/>
						<Min/>
						<Max/>
						<Enum/>
					</BasicType>
				</ClassProperty>
				<ClassProperty>
					<ClassPropertyID Description="统计次数强制清零时间" TagName="统计次数强制清零时间" Name="numFRT"/>
					<comment>累计值强制清零时间</comment>
					<PropertyProcessChar>
						<StoreChar>自动</StoreChar>
						<EditChar>不可组态</EditChar>
						<VisibleChar>可视</VisibleChar>
						<RealTimeChar>实时项</RealTimeChar>
					</PropertyProcessChar>
					<Size>1</Size>
					<ValueType>基本数据类型</ValueType>
					<BasicType>
						<TypeName>TIME</TypeName>
						<Default/>
						<Min/>
						<Max/>
						<Enum/>
					</BasicType>
				</ClassProperty>
				<ClassProperty>
					<ClassPropertyID Description="上一日遥控总次数" TagName="上一日遥控总次数" Name="totalNumPreDay"/>
					<comment>上一日遥控总次数</comment>
					<PropertyProcessChar>
						<StoreChar>自动</StoreChar>
						<EditChar>不可组态</EditChar>
						<VisibleChar>可视</VisibleChar>
						<RealTimeChar>实时项</RealTimeChar>
					</PropertyProcessChar>
					<Size>1</Size>
					<ValueType>基本数据类型</ValueType>
					<BasicType>
						<TypeName>DOUBLE</TypeName>
						<Default/>
						<Min/>
						<Max/>
						<Enum/>
					</BasicType>
				</ClassProperty>
				<ClassProperty>
					<ClassPropertyID Description="上一月遥控总次数" TagName="上一月遥控总次数" Name="totalNumPreMonth"/>
					<comment>上一月遥控总次数</comment>
					<PropertyProcessChar>
						<StoreChar>自动</StoreChar>
						<EditChar>不可组态</EditChar>
						<VisibleChar>可视</VisibleChar>
						<RealTimeChar>实时项</RealTimeChar>
					</PropertyProcessChar>
					<Size>1</Size>
					<ValueType>基本数据类型</ValueType>
					<BasicType>
						<TypeName>DOUBLE</TypeName>
						<Default/>
						<Min/>
						<Max/>
						<Enum/>
					</BasicType>
				</ClassProperty>
				<ClassProperty>
					<ClassPropertyID Description="上一年遥控总次数" TagName="上一年遥控总次数" Name="totalNumPreYear"/>
					<comment>上一年遥控总次数</comment>
					<PropertyProcessChar>
						<StoreChar>自动</StoreChar>
						<EditChar>不可组态</EditChar>
						<VisibleChar>可视</VisibleChar>
						<RealTimeChar>实时项</RealTimeChar>
					</PropertyProcessChar>
					<Size>1</Size>
					<ValueType>基本数据类型</ValueType>
					<BasicType>
						<TypeName>DOUBLE</TypeName>
						<Default/>
						<Min/>
						<Max/>
						<Enum/>
					</BasicType>
				</ClassProperty>
				<ClassProperty>
					<ClassPropertyID Description="上一日遥控成功总次数" TagName="上一日遥控成功总次数" Name="succNumPreDay"/>
					<comment>上一日遥控成功总次数</comment>
					<PropertyProcessChar>
						<StoreChar>自动</StoreChar>
						<EditChar>不可组态</EditChar>
						<VisibleChar>可视</VisibleChar>
						<RealTimeChar>实时项</RealTimeChar>
					</PropertyProcessChar>
					<Size>1</Size>
					<ValueType>基本数据类型</ValueType>
					<BasicType>
						<TypeName>DOUBLE</TypeName>
						<Default/>
						<Min/>
						<Max/>
						<Enum/>
					</BasicType>
				</ClassProperty>
				<ClassProperty>
					<ClassPropertyID Description="上一月遥控成功总次数" TagName="上一月遥控成功总次数" Name="succNumPreMonth"/>
					<comment>上一月遥控成功总次数</comment>
					<PropertyProcessChar>
						<StoreChar>自动</StoreChar>
						<EditChar>不可组态</EditChar>
						<VisibleChar>可视</VisibleChar>
						<RealTimeChar>实时项</RealTimeChar>
					</PropertyProcessChar>
					<Size>1</Size>
					<ValueType>基本数据类型</ValueType>
					<BasicType>
						<TypeName>DOUBLE</TypeName>
						<Default/>
						<Min/>
						<Max/>
						<Enum/>
					</BasicType>
				</ClassProperty>
				<ClassProperty>
					<ClassPropertyID Description="上一年遥控成功总次数" TagName="上一年遥控成功总次数" Name="succNumPreYear"/>
					<comment>上一年遥控成功总次数</comment>
					<PropertyProcessChar>
						<StoreChar>自动</StoreChar>
						<EditChar>不可组态</EditChar>
						<VisibleChar>可视</VisibleChar>
						<RealTimeChar>实时项</RealTimeChar>
					</PropertyProcessChar>
					<Size>1</Size>
					<ValueType>基本数据类型</ValueType>
					<BasicType>
						<TypeName>DOUBLE</TypeName>
						<Default/>
						<Min/>
						<Max/>
						<Enum/>
					</BasicType>
				</ClassProperty>
			</ClassPropertyList>
			<ClassBehavior>
				<CommandList>
					<Command>
						<FunctionName>ForceReset</FunctionName>
						<FunctionDes>统计值强制清零</FunctionDes>
						<comment>所有统计值（总、日、月、年统计值，上一日、月、年统计值）清零，并记录累计值强制清零时间；再执行累计值改变（Changed）输出事件，statType为0，即所有累计值变化改变。</comment>
						<FuncParamTable>
							<FuncParamItem>
								<Name>user</Name>
								<Des>操作员名</Des>
								<ValueType>string</ValueType>
								<TransDirection>in</TransDirection>
								<comment/>
							</FuncParamItem>
							<FuncParamItem>
								<Name>pid</Name>
								<Des>被控点的点号</Des>
								<ValueType>long</ValueType>
								<TransDirection>in</TransDirection>
								<comment/>
							</FuncParamItem>
						</FuncParamTable>
						<ReturnValue>
							<Type>long</Type>
							<Des>0成功，-1失败</Des>
						</ReturnValue>
					</Command>
					<Command>
						<FunctionName>MyTest</FunctionName>
						<FunctionDes>测试命令</FunctionDes>
						<comment>本类测试命令，只供测试使用</comment>
						<FuncParamTable>
							<FuncParamItem>
								<Name>user</Name>
								<Des>操作员名</Des>
								<ValueType>string</ValueType>
								<TransDirection>in</TransDirection>
								<comment/>
							</FuncParamItem>
							<FuncParamItem>
								<Name>pid</Name>
								<Des>被控点的点号</Des>
								<ValueType>long</ValueType>
								<TransDirection>in</TransDirection>
								<comment/>
							</FuncParamItem>
							<FuncParamItem>
								<Name>nPara</Name>
								<Des>参数</Des>
								<ValueType>long</ValueType>
								<TransDirection>in</TransDirection>
								<comment/>
							</FuncParamItem>
						</FuncParamTable>
						<ReturnValue>
							<Type>long</Type>
							<Des>0成功，-1失败</Des>
						</ReturnValue>
					</Command>
				</CommandList>
				<OnEventList>
					<OnEvent>
						<FunctionName>TimingReset</FunctionName>
						<FunctionDes>统计值定时清零</FunctionDes>
						<EventInputList/>
						<TimerInputList>
							<TimerInput>
								<CalculationType>定时</CalculationType>
								<Impact>类级</Impact>
								<Time>00:00:01</Time>
							</TimerInput>
						</TimerInputList>
						<EventProcessMode>同步</EventProcessMode>
						<comment>若当前统计日（月、年）与当前系统时间的日（月、年）不相等，刷新上一日（月、年）总统计值为清零前相应的日（月、年）总累计值,相应的日（月、年）累计值复位为0，当前统计日（月、年）为当前系统时间，然后执行累计值改变（Changed）输出事件，statType为2（3、4）。日定时器事件、月定时器事件、年定时器事件.在C++代码中实现月、年的定时清零判断。</comment>
					</OnEvent>
				</OnEventList>
				<ReDefOnEventList/>
				<OutEventList>
					<OutEvent>
						<FunctionName>ChangedPara</FunctionName>
						<FunctionDes>统计值改变(带参数) 每调用一次遥控总次数＋1；如果参数bSuc＝true时，遥控成功次数＋1</FunctionDes>
						<comment>每调用一次遥控总次数＋1；如果参数bSuc＝true时，遥控成功次数＋1</comment>
						<ParamMode>简单参数</ParamMode>
						<ParamItem>
							<TransDirection>in</TransDirection>
							<ParamItemID Name="bSuc" TagName="遥控成功标志" Description="true为遥控成功"/>
							<ValueType>LOGICAL</ValueType>
							<comment>遥控成功时，遥控成功次数＋1</comment>
						</ParamItem>
					</OutEvent>
					<OutEvent><FunctionName>RemoteControlled</FunctionName><FunctionDes>遥控成功或失败时触发一次，统计值强制清零不做触发</FunctionDes>
						<comment/>
						<ParamMode>简单参数</ParamMode>
						<ParamItem>
							<TransDirection>in</TransDirection>
							<ParamItemID Name="bSuc" TagName="遥控是否成功" Description=""/>
							<ValueType>INT8</ValueType>
							<comment>0成功，-1失败</comment>
						</ParamItem>
					</OutEvent>
					<OutEvent><FunctionName>RemoteCtrlSucc</FunctionName><FunctionDes>遥控成功时触发一次，统计值强制清零不做触发</FunctionDes>
						<comment/>
						<ParamMode>无参数</ParamMode>
					</OutEvent>
					<OutEvent><FunctionName>RemoteCtrlFail</FunctionName><FunctionDes>遥控失败时触发一次，统计值强制清零不做触发</FunctionDes>
						<comment/>
						<ParamMode>无参数</ParamMode>
					</OutEvent></OutEventList>
				<VirtualInterfaceList>
					<VirtualInterface>
						<FunctionName>Update</FunctionName>
						<FunctionDes>统计值更新</FunctionDes>
						<comment>执行输出事件（Changed）时，遥控总次数（年、月、日）＋1，Changed参数bSuc为true时，遥控成功次数（年、月、日）＋1</comment>
						<FuncParamTable>
							<FuncParamItem>
								<Name>executSuc</Name>
								<Des>遥控执行是否成功</Des>
								<ValueType>bool</ValueType>
								<comment>如果遥控执行成功，遥控总次数（年、月、日）＋1，遥控成功次数（年、月、日）＋1；如果遥控执行不成功，遥控总次数（年、月、日）＋1。</comment>
							</FuncParamItem>
						</FuncParamTable>
						<ReturnValue>
							<Type>void</Type>
							<Des/>
						</ReturnValue>
					</VirtualInterface>
				</VirtualInterfaceList>
				<OverLoadList>
					<OverLoad>
						<ClassRef>::POINT</ClassRef>
						<FunctionName>initialize</FunctionName>
						<FuncType>虚函数</FuncType>
						<Des>先调用基类initialize函数，然后调用ForceReset函数, 所有统计值清零。</Des>
					</OverLoad>
				</OverLoadList>
				<ClassBehaviorVersion>1292985378</ClassBehaviorVersion>
			</ClassBehavior>
		</Class>
		<Class CreateDate="2008-11-26" Creator="LIZHIJUN">
			<ClassID Description="可远程控制设备的类EQ_Ctrl,继承于基础类库的EQ类。" TagName="可控设备类EQ_Ctrl" Name="EQ_Ctrl" GlobalName="PSCADA_EQ_Ctrl"/>
			<ClassInfo>
				<BaseClassRef GlobalName="::EQ" RefVersion="1"/>
				<Instanteable>不可实例化</Instanteable>
			</ClassInfo>
			<ClassVersion>1280136495</ClassVersion>
			<comment>
			</comment>
			<ClassPropertyList>
				<ClassPropertyVersion>1280127407</ClassPropertyVersion>
				<ClassProperty>
					<ClassPropertyID Description="" TagName="输出控制配置参数" Name="outputCtrlVar"/>
					<comment/>
					<PropertyProcessChar>
						<StoreChar>自动</StoreChar>
						<EditChar>可组态</EditChar>
						<VisibleChar>可视</VisibleChar>
						<RealTimeChar>参数项</RealTimeChar>
					</PropertyProcessChar>
					<Size>1</Size>
					<ValueType>子对象</ValueType>
					<SubObjClassRef GlobalName="OutputCtrl" RefVersion="1"/>
				</ClassProperty>
				<ClassProperty>
					<ClassPropertyID Description="" Name="outputCtrlTable" TagName="输出控制命令列表"/>
					<comment/>
					<PropertyProcessChar>
						<StoreChar>自动</StoreChar>
						<EditChar>可组态</EditChar>
						<VisibleChar>可视</VisibleChar>
						<RealTimeChar>参数项</RealTimeChar>
					</PropertyProcessChar>
					<Size>3</Size>
					<ValueType>结构</ValueType>
					<StructType>
						<Declaration>true</Declaration>
						<Struct>
							<StructID Name="LocalStruct" TagName="自定义结构" Description=" " GlobalName="PSCADA_EQ_Ctrl_outputCtrlTable_S"/>
							<StructVersion>1</StructVersion>
							<comment>
							</comment>
							<StructPropertyList>
								<StructProperty>
									<StructPropertyID Name="opDes" TagName="操作描述" Description="操作描述如&quot;合闸&quot;,&quot;分闸&quot;"/>
									<comment/>
									<ValueType>STRING32</ValueType>
								</StructProperty>
								<StructProperty>
									<StructPropertyID Name="opInterlockValue" TagName="操作联锁有效值" Description="操作联锁为何值时生效"/>
									<comment/>
									<ValueType>INT8</ValueType>
								</StructProperty>
								<StructProperty>
									<StructPropertyID Name="opValue" TagName="操作输出值" Description="操作输出DO的赋值"/>
									<comment/>
									<ValueType>INT8</ValueType>
								</StructProperty>
								<StructProperty>
									<StructPropertyID Name="opReturnValue" TagName="操作返信值" Description="操作返信值"/>
									<comment/>
									<ValueType>INT8</ValueType>
								</StructProperty>
								<StructProperty>
									<StructPropertyID Name="opSelRetValue" TagName="选择返信值" Description="选择返信值"/>
									<comment/>
									<ValueType>INT8</ValueType>
								</StructProperty>
								<StructProperty>
									<StructPropertyID Name="opSelValue" TagName="选择输出值" Description="选择输出值"/>
									<comment/>
									<ValueType>INT8</ValueType>
								</StructProperty>
							</StructPropertyList>
						</Struct>
					</StructType>
				</ClassProperty>
				<ClassProperty>
					<ClassPropertyID Description="releaseInterLock为true，则在遥控操作过程中，不判断每个操作的内部连锁条件（输出控制命令列表中用户组态的连锁条件），releaseInterLock为false，则在遥控操作过程中，要判断每个操作的内部连锁条件。" Name="releaseInterLock" TagName="解除软件闭锁"/>
					<comment/>
					<PropertyProcessChar>
						<StoreChar>自动</StoreChar>
						<EditChar>可组态</EditChar>
						<VisibleChar>可视</VisibleChar>
						<RealTimeChar>实时项</RealTimeChar>
					</PropertyProcessChar>
					<Size>1</Size>
					<ValueType>基本数据类型</ValueType>
					<BasicType>
						<TypeName>LOGICAL</TypeName>
						<Default>0</Default>
						<Min/>
						<Max/>
						<Enum/>
					</BasicType>
				</ClassProperty>
				<ClassProperty>
					<ClassPropertyID Description="控制闭锁状态" Name="ctrlLockStatus" TagName="控制闭锁状态"/>
					<comment/>
					<PropertyProcessChar>
						<StoreChar>自动</StoreChar>
						<EditChar>不可组态</EditChar>
						<VisibleChar>可视</VisibleChar>
						<RealTimeChar>实时项</RealTimeChar>
					</PropertyProcessChar>
					<Size>1</Size>
					<ValueType>基本数据类型</ValueType>
					<BasicType>
						<TypeName>INT8</TypeName>
						<Default/>
						<Min/>
						<Max/>
						<Enum/>
					</BasicType>
				</ClassProperty>
				<ClassProperty>
					<ClassPropertyID Description="如果合闸、分闸输出为两个通道，一般需要遥控复位，即在合闸或分闸通道输出数秒后（输出1），再输出0。如果合闸、分闸输出为一个通道，则无需做遥控复位。" Name="ctrlReset" TagName="是否遥控复位"/>
					<comment/>
					<PropertyProcessChar>
						<StoreChar>自动</StoreChar>
						<EditChar>可组态</EditChar>
						<VisibleChar>可视</VisibleChar>
						<RealTimeChar>参数项</RealTimeChar>
					</PropertyProcessChar>
					<Size>1</Size>
					<ValueType>基本数据类型</ValueType>
					<BasicType>
						<TypeName>LOGICAL</TypeName>
						<Default>0</Default>
						<Min>0</Min>
						<Max>1</Max>
						<Enum/>
					</BasicType>
				</ClassProperty>
				<ClassProperty>
					<ClassPropertyID Description="记录最后一次对对象进行操作的操作者标识" Name="opUser" TagName="操作员"/>
					<comment/>
					<PropertyProcessChar>
						<StoreChar>自动</StoreChar>
						<EditChar>不可组态</EditChar>
						<VisibleChar>可视</VisibleChar>
						<RealTimeChar>实时项</RealTimeChar>
					</PropertyProcessChar>
					<Size>1</Size>
					<ValueType>基本数据类型</ValueType>
					<BasicType>
						<TypeName>STRING12</TypeName>
						<Default/>
						<Min/>
						<Max/>
						<Enum/>
					</BasicType>
				</ClassProperty>
				<ClassProperty><ClassPropertyID Description="设备占用" Name="lock" TagName="锁"/>
					<comment/>
					<PropertyProcessChar>
						<StoreChar>自动</StoreChar>
						<EditChar>可组态</EditChar>
						<VisibleChar>可视</VisibleChar>
						<RealTimeChar>参数项</RealTimeChar>
					</PropertyProcessChar>
					<Size>1</Size>
					<ValueType>子对象</ValueType>
					<SubObjClassRef GlobalName="AppPubBase::Lock" RefVersion="1"/>
				</ClassProperty></ClassPropertyList>
			<ClassBehavior>
				<CommandList>
					<Command>
						<FunctionName>Select</FunctionName>
						<FunctionDes>选择</FunctionDes>
						<comment>判断是否满足条件：通讯无故障、操作员具有操作权限、未被锁定、设备无故障、遥控状态、操作允许、
没有维修挂牌。
如果满足，则：
    0)锁定该设备，即执行“互锁”命令Lock；如果成功，则执行下列操作，如果失败，则返回失败。
    1)辅助线程中止信号量m_AuxThreadBreak 复位。	
    2)如果存在“选择”通道，则对选择通道赋值；
    3)给execStatus赋值为1，给statusDisplay赋值为“执行中―选择命令已发出，处于等待返校状态”；
    4a)如果“返校超时时间”等于0，给execStatus赋值为2,给statusDisplay赋值为“执行中―返校成功，
      处于等待预置命令状态”。
        4a1)如果“等待执行时间”等于0，return 0。
        4a2)如果“等待执行时间”大于0，启用“等待执行”线程，return 0。
        4a3)如果“等待执行时间”小于0，给execStatus赋值为9,给errorDisplay赋值为“错误―等待执行
            时间小于0，非法！”,return－1。
    4b)如果“返校超时时间”大于0，启用“返校操作”线程。return 0。
    4c)如果“返校超时时间”小于0，启用给execStatus赋值为8,给errorDisplay赋值为“错误―返校超时
       时间小于0，非法！”,return－1。

“返校操作”线程：
    1)返校未超时期间(周期为1秒),
       a)如果“辅助线程中止信号量”为真(“取消”命令中置位)，给statusDisplay赋值为“遥控选择操作
       已被取消，请重新进行选择！”；return -1；  
       b)“返校超时时间”倒计时,显示返校超时倒计时的信息;
       c)返校判断――返校判断包括：i)满足通讯无故障，设备无故障，操作允许，处于遥控状态。ii)如果
         设备支持硬返校， 则返校返信值为真；
           c1)如果返校判断成功，给execStatus赋值为2,给statusDisplay赋值为“执行中―返校成功，处于
              等待预置命令状态”；
                c11)如果“等待执行时间”等于0，return 0。
                c12)如果“等待执行时间”大于0，启用“等待执行”线程，return 0。
                c13)如果“等待执行时间”小于0，给execStatus赋值为8,给errorDisplay赋值为“错误―等待
                    执行时间小于0，非法！”,return－1。
           c2)如果返校判断未成功,重复执行1);	
    2)返校超时，给execStatus赋值为8,给errorDisplay赋值为“错误―返校超时”, 执行“取消”操作；return -1。

“等待执行”线程：
    1)等待未超时期间(周期1秒)
      a)如果“辅助线程中止信号量”为真(“取消”命令中置位)，给statusDisplay赋值为“遥控选择操作
        已被取消，请重新进行选择！”；return -1；
      b)“等待执行时间”倒计时,显示等待执行超时倒计时的信息；
      c)判断execStatus是否为4，即是否遥控命令已发送、处于等待命令返回状态：
         c1)如果是,return 0;
         c2)如果否,重复执行1)。
    2)等待超时，给execStatus赋值为9,给errorDisplay赋值为“错误―等待超时”,执行“取消”操作；return -1;</comment>
						<FuncParamTable>
							<FuncParamItem>
								<Name>user</Name>
								<Des>操作员名</Des>
								<ValueType>string</ValueType>
								<TransDirection>in</TransDirection>
								<comment/>
							</FuncParamItem>
							<FuncParamItem>
								<Name>pid</Name>
								<Des>被控点的点号</Des>
								<ValueType>long</ValueType>
								<TransDirection>in</TransDirection>
								<comment/>
							</FuncParamItem>
							<FuncParamItem>
								<Name>opDes</Name>
								<Des>进行何种预置操作的描述</Des>
								<ValueType>string</ValueType>
								<TransDirection>in</TransDirection>
								<comment/>
							</FuncParamItem>
							<FuncParamItem>
								<Name>lockID</Name>
								<Des>占用锁标识</Des>
								<ValueType>string</ValueType>
								<TransDirection>in</TransDirection>
								<comment>参见lockID属性，缺省为user</comment>
							</FuncParamItem>
							<FuncParamItem>
								<Name>lockTimeOuts</Name>
								<Des>占用锁超时时间（单位：秒）</Des>
								<ValueType>long</ValueType>
								<TransDirection>in</TransDirection>
								<comment>参见Lock命令，缺省为0</comment>
							</FuncParamItem>
						</FuncParamTable>
						<ReturnValue>
							<Type>long</Type>
							<Des>0成功，-1失败</Des>
						</ReturnValue>
					</Command>
					<Command>
						<FunctionName>Preset</FunctionName>
						<FunctionDes>预置</FunctionDes>
						<comment>判断是否满足:通讯无故障、操作员具有操作权限、操作员自己锁定、设备无故障、处于遥控、
操作允许、遥控操作联锁条件、遥控返信条件，execStatus是否为2―处于等待预置命令状态。
如果满足：
        1) 给execStatus赋值为3,给statusDisplay赋值为“执行中―预置命令成功，处于等待命令
           发送状态”；return 0。
如果不满足：
        1) 给execStatus赋值为10,给statusDisplay赋值为“错误―预置失败”；
        2) 执行“取消”操作；return －1。</comment>
						<FuncParamTable>
							<FuncParamItem>
								<Name>user</Name>
								<Des>操作员名</Des>
								<ValueType>string</ValueType>
								<TransDirection>in</TransDirection>
								<comment/>
							</FuncParamItem>
							<FuncParamItem>
								<Name>pid</Name>
								<Des>被控点的点号</Des>
								<ValueType>long</ValueType>
								<TransDirection>in</TransDirection>
								<comment/>
							</FuncParamItem>
							<FuncParamItem>
								<Name>opDes</Name>
								<Des>进行何种预置操作的描述</Des>
								<ValueType>string</ValueType>
								<TransDirection>in</TransDirection>
								<comment/>
							</FuncParamItem>
						</FuncParamTable>
						<ReturnValue>
							<Type>long</Type>
							<Des>0成功，-1失败</Des>
						</ReturnValue>
					</Command>
					<Command>
						<FunctionName>Execute</FunctionName>
						<FunctionDes>执行</FunctionDes>
						<comment>判断是否满足:通讯无故障、操作员具有操作权限、操作员自己锁定、设备无故障、处于遥控、操作允许、
遥控操作联锁条件、遥控返信条件，execStatus是否为3―处于等待命令发送状态：
如果满足，则
    1)执行设备的遥控操作，给相应的外部通道赋值。
    2)给execStatus赋值为4，给statusDisplay赋值为“执行中―该命令已发出，处于等待命令返回”；
    3a)如果“输出保持时间”等于0，为电平型命令，
        3a1)如果“执行超时时间”等于0，给execStatus赋值为6,给statusDisplay赋值为“完成―
           遥控操作成功”，执行“取消”操作；return 0。
        3a2)如果“执行超时时间”大于0,启用“返信判断”线程，return 0。
        3a3)如果“执行超时时间”小于0,给execStatus赋值为11,给errorDisplay赋值为“错误―执行超
            时时间小于0，非法！”，return－1。
    3b)如果“输出保持时间”大于0，为脉冲型命令，启用“信号保持”线程。return 0。
    3c)如果“输出保持时间”小于0，给execStatus赋值为11,给errorDisplay赋值为“错误―输出保持时间
       小于0，非法！”return－1。

“信号保持”线程：
    1) 脉冲保持期间，1S为周期刷新statusDisplay：“脉冲型命令―保持时间: ***S。”；
    2) 脉冲保持时间到，收回命令，即给相应的外部通道复位。给execStatus赋值为5, 给statusDisplay
       赋值为“脉冲型命令―保持时间到，收回命令”
        2a)如果“执行超时时间”等于0，给execStatus赋值为6,给statusDisplay赋值为“完成―
           遥控操作成功”，执行“取消”操作；return 0。
        2b)如果“执行超时时间”大于0,启用“返信判断”线程，return 0。
        2c)如果“执行超时时间”小于0,给execStatus赋值为11,给errorDisplay赋值为“错误―执行超
            时时间小于0，非法！”，return－1。

“返信判断”线程:
    1)未超时期间,(周期为1秒)， 
      a)超时时间倒计时,显示倒计时的信息；
      b)进行返信判断：
         b1) 如果命令返信成功，给execStatus赋值为6,给statusDisplay赋值为“完成―遥控操作成功”， 
             执行“取消”操作，return 0；
         b2) 如果命令返信未成功,重复执行1);
    2)返信超时，给execStatus赋值为11,给errorDisplay赋值为“错误―执行超时（或拒动）”, 执行
     “取消”操作;return -1。</comment>
						<FuncParamTable>
							<FuncParamItem>
								<Name>user</Name>
								<Des>操作员名</Des>
								<ValueType>string</ValueType>
								<TransDirection>in</TransDirection>
								<comment/>
							</FuncParamItem>
							<FuncParamItem>
								<Name>pid</Name>
								<Des>被控点的点号</Des>
								<ValueType>long</ValueType>
								<TransDirection>in</TransDirection>
								<comment/>
							</FuncParamItem>
							<FuncParamItem>
								<Name>opDes</Name>
								<Des>进行何种执行操作的描述</Des>
								<ValueType>string</ValueType>
								<TransDirection>in</TransDirection>
								<comment/>
							</FuncParamItem>
						</FuncParamTable>
						<ReturnValue>
							<Type>long</Type>
							<Des>0成功，-1失败</Des>
						</ReturnValue>
					</Command>
					<Command>
						<FunctionName>Cancel</FunctionName>
						<FunctionDes>取消</FunctionDes>
						<comment>1)辅助线程中止信号量m_AuxThreadBreak 置位；
    2)进行取消选择操作。比如“选择”外部通道复位或者给“取消选择”外部通道赋值；
    3)给execStatus赋值为0，给statusDisplay赋值为“执行中―命令已经开始，处于等待选择状态”。
    4)解锁该设备；</comment>
						<FuncParamTable>
							<FuncParamItem>
								<Name>user</Name>
								<Des>操作员名</Des>
								<ValueType>string</ValueType>
								<TransDirection>in</TransDirection>
								<comment/>
							</FuncParamItem>
							<FuncParamItem>
								<Name>pid</Name>
								<Des>被控点的点号</Des>
								<ValueType>long</ValueType>
								<TransDirection>in</TransDirection>
								<comment/>
							</FuncParamItem>
						</FuncParamTable>
						<ReturnValue>
							<Type>long</Type>
							<Des>0成功，-1失败</Des>
						</ReturnValue>
					</Command>
					<Command>
						<FunctionName>SetReleaseInterLock</FunctionName>
						<FunctionDes>设置解除软件闭锁标志</FunctionDes>
						<comment>首先验证当前用户是否有解除软件闭锁的权限，如果有权限则根据参数bRelease来设置releaseInterLock。</comment>
						<FuncParamTable>
							<FuncParamItem>
								<Name>user</Name>
								<Des>操作员名</Des>
								<ValueType>string</ValueType>
								<TransDirection>in</TransDirection>
								<comment/>
							</FuncParamItem>
							<FuncParamItem>
								<Name>pid</Name>
								<Des>被控点的点号</Des>
								<ValueType>long</ValueType>
								<TransDirection>in</TransDirection>
								<comment/>
							</FuncParamItem>
							<FuncParamItem>
								<Name>bRelease</Name>
								<Des>是否解除软件闭锁</Des>
								<ValueType>boolean</ValueType>
								<TransDirection>in</TransDirection>
								<comment/>
							</FuncParamItem>
						</FuncParamTable>
						<ReturnValue>
							<Type>long</Type>
							<Des>0成功，-1失败</Des>
						</ReturnValue>
					</Command>
					<Command>
						<FunctionName>ClearProcessInfo</FunctionName>
						<FunctionDes>清除操作过程信息</FunctionDes>
						<comment>清除操作过程信息，如果遥控操作正在执行过程中，则不清除。</comment>
						<FuncParamTable>
							<FuncParamItem>
								<Name>user</Name>
								<Des>操作员名</Des>
								<ValueType>string</ValueType>
								<TransDirection>in</TransDirection>
								<comment/>
							</FuncParamItem>
							<FuncParamItem>
								<Name>pid</Name>
								<Des>被控点的点号</Des>
								<ValueType>long</ValueType>
								<TransDirection>in</TransDirection>
								<comment/>
							</FuncParamItem>
						</FuncParamTable>
						<ReturnValue>
							<Type>long</Type>
							<Des>0成功，-1失败</Des>
						</ReturnValue>
					</Command>
					<Command>
						<FunctionName>CtrlLock</FunctionName>
						<FunctionDes>设置/解除控制闭锁命令</FunctionDes>
						<comment/>
						<FuncParamTable>
							<FuncParamItem>
								<Name>user</Name>
								<Des>操作员名</Des>
								<ValueType>string</ValueType>
								<TransDirection>in</TransDirection>
								<comment/>
							</FuncParamItem>
							<FuncParamItem>
								<Name>pid</Name>
								<Des>被控点的点号</Des>
								<ValueType>long</ValueType>
								<TransDirection>in</TransDirection>
								<comment/>
							</FuncParamItem>
							<FuncParamItem>
								<Name>start_or_end</Name>
								<Des>控制闭锁or解锁</Des>
								<ValueType>boolean</ValueType>
								<TransDirection>in</TransDirection>
								<comment/>
							</FuncParamItem>
						</FuncParamTable>
						<ReturnValue>
							<Type>long</Type>
							<Des>0成功，-1失败</Des>
						</ReturnValue>
					</Command>
					<Command>
						<FunctionName>RemoteCtrl</FunctionName>
						<FunctionDes>遥控</FunctionDes>
						<comment>遥控（分闸/合闸）操作统一接口</comment>
						<FuncParamTable>
							<FuncParamItem>
								<Name>user</Name>
								<Des>操作员名</Des>
								<ValueType>string</ValueType>
								<TransDirection>in</TransDirection>
								<comment/>
							</FuncParamItem>
							<FuncParamItem>
								<Name>pid</Name>
								<Des>被控点的点号</Des>
								<ValueType>long</ValueType>
								<TransDirection>in</TransDirection>
								<comment/>
							</FuncParamItem>
							<FuncParamItem>
								<Name>opDes</Name>
								<Des>操作描述</Des>
								<ValueType>string</ValueType>
								<TransDirection>in</TransDirection>
								<comment/>
							</FuncParamItem>
							<FuncParamItem>
								<Name>lockID</Name>
								<Des>占用锁标识</Des>
								<ValueType>string</ValueType>
								<TransDirection>in</TransDirection>
								<comment>参见lockID属性，缺省为user</comment>
							</FuncParamItem>
							<FuncParamItem>
								<Name>lockTimeOuts</Name>
								<Des>占用锁超时时间（单位：秒）</Des>
								<ValueType>long</ValueType>
								<TransDirection>in</TransDirection>
								<comment>参见Lock命令，缺省为0</comment>
							</FuncParamItem>
						</FuncParamTable>
						<ReturnValue>
							<Type>long</Type>
							<Des>0成功，-1失败</Des>
						</ReturnValue>
					</Command>
				</CommandList>
				<OnEventList/>
				<ReDefOnEventList>
					<OnEvent ReDefine="ReDefine">
						<FunctionName>VarStatusSynt</FunctionName>
						<FunctionDes>接收作为子对象的变量的值变化事件（只关心状态变化）,执行有关数据质量的统计操作</FunctionDes>
						<EventInputList>
						</EventInputList>
						<TimerInputList/>
						<EventProcessMode>同步</EventProcessMode>
						<comment>对于设备类派生类，会自动建立相应子对象的值变化事件和该接收事件的回调关系</comment>
					</OnEvent>
					<OnEvent ReDefine="ReDefine">
						<FunctionName>VarAlarmSynt</FunctionName>
						<FunctionDes>接收作为子对象的变量所组合的报警点的报警状态变化事件,执行有关报警的统计操作</FunctionDes>
						<EventInputList>
						</EventInputList>
						<TimerInputList/>
						<EventProcessMode>同步</EventProcessMode>
						<comment>对于设备类派生类，会自动建立相应子对象所组合的报警点的报警状态变化事件和该接收事件的回调关系</comment>
					</OnEvent>
				</ReDefOnEventList>
				<OutEventList>
					<OutEvent>
						<FunctionName>YKExecute</FunctionName>
						<FunctionDes>执行遥控时触发事件</FunctionDes>
						<comment>当执行Execute命令时触发此输出事件，回调NoRemoteCtrl_NoProtTrip中的YKExecute</comment>
						<ParamMode>无参数</ParamMode>
					</OutEvent>
					<OutEvent>
						<FunctionName>CtrlLockStatusChanged</FunctionName>
						<FunctionDes>控制闭锁状态改变时触发此事件</FunctionDes>
						<comment/>
						<ParamMode>公共参数表引用</ParamMode>
						<CommonParamTableRef GlobalName="::SyntChange_P" RefVersion="1"/>
					</OutEvent>
					<OutEvent>
						<FunctionName>OperatorChange</FunctionName>
						<FunctionDes>输出操作员变化事件</FunctionDes>
						<comment/>
						<ParamMode>自定义参数表</ParamMode>
						<ParamTable>
							<ParamTableID Name="ParamTable" TagName="参数表" Description="操作员名变化输出事件参数结构定义" GlobalName="PSCADA_EQ_Ctrl_OperatorChange_P"/>
							<ParamTableVersion>1</ParamTableVersion>
							<comment/>
							<ParamItemList>
								<ParamItem>
									<TransDirection>in</TransDirection>
									<ParamItemID Name="opUser" TagName="当前操作员名" Description=""/>
									<ValueType>STRING12</ValueType>
									<comment/>
								</ParamItem>
								<ParamItem>
									<TransDirection>in</TransDirection>
									<ParamItemID Name="oldOpUser" TagName="变化前操作员名" Description=""/>
									<ValueType>STRING12</ValueType>
									<comment/>
								</ParamItem>
							</ParamItemList>
						</ParamTable>
					</OutEvent>
				</OutEventList>
				<VirtualInterfaceList>
					<VirtualInterface>
						<FunctionName>CtrlLock_Inter</FunctionName>
						<FunctionDes>设置控制闭锁的虚函数，由子类重载，可重载为挂牌、屏蔽等.只有有遥控操作权限的操作员且开关的控制权在此地才可以进行控制闭锁/解除控制闭锁操作。控制闭锁是将该设备的ctrlLockStatus置1，解除控制闭锁是将该设备的ctrlLockStatus置0。</FunctionDes>
						<comment/>
						<FuncParamTable>
							<FuncParamItem>
								<Name>user</Name>
								<Des>操作员名</Des>
								<ValueType>const char *</ValueType>
								<comment>in</comment>
							</FuncParamItem>
							<FuncParamItem>
								<Name>pid</Name>
								<Des>被控点的点号</Des>
								<ValueType>long</ValueType>
								<comment>in</comment>
							</FuncParamItem>
							<FuncParamItem>
								<Name>start_or_end</Name>
								<Des>控制闭锁or解锁</Des>
								<ValueType>bool</ValueType>
								<comment>in</comment>
							</FuncParamItem>
						</FuncParamTable>
						<ReturnValue>
							<Type>bool</Type>
							<Des>true成功，false失败.</Des>
						</ReturnValue>
					</VirtualInterface>
					<VirtualInterface>
						<FunctionName>GetPermPos</FunctionName>
						<FunctionDes>判断权限位置是否在本地，具体的逻辑由子类重载实现，如果需要整站电力设备全部移交，则要求表示权限位置的点名命名有规则，可以通过规则命名的点名查找全局权限位置。</FunctionDes>
						<comment/>
						<FuncParamTable>
						</FuncParamTable>
						<ReturnValue>
							<Type>bool</Type>
							<Des>true:在本地；false:不在本地.</Des>
						</ReturnValue>
					</VirtualInterface>
					<VirtualInterface>
						<FunctionName>GetOpReturnName</FunctionName>
						<FunctionDes>获得遥控返信变量名</FunctionDes>
						<comment>遥控返信子对象名</comment>
						<FuncParamTable/>
						<ReturnValue>
							<Type>std::string</Type>
							<Des>遥控返信变量名</Des>
						</ReturnValue>
					</VirtualInterface>
					<VirtualInterface>
						<FunctionName>GetLocalRemoteName</FunctionName>
						<FunctionDes>获得本地/远程变量名</FunctionDes>
						<comment>本地/远程状态子对象名。默认引用的本地/远程DI量取值：０为本地，１为远程。</comment>
						<FuncParamTable/>
						<ReturnValue>
							<Type>std::string</Type>
							<Des>本地/远程变量名</Des>
						</ReturnValue>
					</VirtualInterface>
					<VirtualInterface>
						<FunctionName>GetDevFaultName</FunctionName>
						<FunctionDes>获得设备故障变量名</FunctionDes>
						<comment/>
						<FuncParamTable/>
						<ReturnValue>
							<Type>std::string</Type>
							<Des>设备故障变量名</Des>
						</ReturnValue>
					</VirtualInterface>
					<VirtualInterface>
						<FunctionName>GetCheckReturnName</FunctionName>
						<FunctionDes>获得 返校返信变量名</FunctionDes>
						<comment>返校返信属性或子对象名，为选择通道DO子对象selectChannel输出后返回的DI子对象名。</comment>
						<FuncParamTable/>
						<ReturnValue>
							<Type>std::string</Type>
							<Des>返校返信变量名</Des>
						</ReturnValue>
					</VirtualInterface>
					<VirtualInterface>
						<FunctionName>GetTableSubItems</FunctionName>
						<FunctionDes>根据不同的参数可以分别获得 选择通道属性(selectChannelAttr)、操作联锁属性(opInterlockAttr)、操作输出属性(opAttr)、取消通道属性(cancelChannelAttr)。</FunctionDes>
						<comment>与属性项outputCtrlTable相关</comment>
						<FuncParamTable>
							<FuncParamItem>
								<Name>dimension</Name>
								<Des>维数</Des>
								<ValueType>int</ValueType>
								<comment>目前，取值只能是0，1，2</comment>
							</FuncParamItem>
							<FuncParamItem>
								<Name>parm</Name>
								<Des>parm=0返回 选择通道属性
parm=1返回 操作联锁属性
parm=2返回 操作输出属性
parm=3返回 取消通道属性</Des>
								<ValueType>int</ValueType>
								<comment>取值范围为[0,3]的整数</comment>
							</FuncParamItem>
						</FuncParamTable>
						<ReturnValue>
							<Type>std::string</Type>
							<Des>根据不同的参数可以分别获得 选择通道属性、操作联锁属性、操作输出属性、取消通道属性。</Des>
						</ReturnValue>
					</VirtualInterface>
					<VirtualInterface>
						<FunctionName>SetOperation</FunctionName>
						<FunctionDes>设置操作痕迹；并产生相应的操作员变化事件和（或）操作事件</FunctionDes>
						<comment>操作时间设置为处理本次设置的系统时间（不做记录）</comment>
						<FuncParamTable>
							<FuncParamItem>
								<Name>opUser</Name>
								<Des>操作员名</Des>
								<ValueType>std::string</ValueType>
								<comment>in</comment>
							</FuncParamItem>
						</FuncParamTable>
						<ReturnValue>
							<Type>void</Type>
							<Des>返回值为空</Des>
						</ReturnValue>
					</VirtualInterface>
					<VirtualInterface>
						<FunctionName>GetComFaultName</FunctionName>
						<FunctionDes>获得设备通讯故障变量名</FunctionDes>
						<comment>返回一个DI变量名</comment>
						<FuncParamTable/>
						<ReturnValue>
							<Type>std::string</Type>
							<Des>设备通讯故障变量名</Des>
						</ReturnValue>
					</VirtualInterface>
					<VirtualInterface>
						<FunctionName>HaveRight</FunctionName>
						<FunctionDes>判断是否具有控制权限</FunctionDes>
						<comment>默认有控制权限，由子类重载实现。</comment>
						<FuncParamTable>
							<FuncParamItem>
								<Name>user</Name>
								<Des>用户名</Des>
								<ValueType>const char*</ValueType>
								<comment/>
							</FuncParamItem>
						</FuncParamTable>
						<ReturnValue>
							<Type>bool</Type>
							<Des/>
						</ReturnValue>
					</VirtualInterface>
					<VirtualInterface>
						<FunctionName>AfterSetChannel</FunctionName>
						<FunctionDes>执行命令输出后，即执行命令的SetChannel操作成功以后</FunctionDes>
						<comment>此虚函数暴露的执行命令下发后的接口，由虚函数重载</comment>
						<FuncParamTable>
							<FuncParamItem>
								<Name>len</Name>
								<Des>参数值长度</Des>
								<ValueType>unsigned int</ValueType>
								<comment/>
							</FuncParamItem>
							<FuncParamItem>
								<Name>p</Name>
								<Des>参数值</Des>
								<ValueType>const char*</ValueType>
								<comment/>
							</FuncParamItem>
						</FuncParamTable>
						<ReturnValue>
							<Type/>
							<Des/>
						</ReturnValue>
					</VirtualInterface>
					<VirtualInterface>
						<FunctionName>AfterSuc</FunctionName>
						<FunctionDes>设备返信成功后</FunctionDes>
						<comment>此虚函数暴露的设备返信成功的接口，由虚函数重载</comment>
						<FuncParamTable>
							<FuncParamItem>
								<Name>len</Name>
								<Des>参数值长度</Des>
								<ValueType>unsigned int</ValueType>
								<comment/>
							</FuncParamItem>
							<FuncParamItem>
								<Name>p</Name>
								<Des>参数值</Des>
								<ValueType>const char*</ValueType>
								<comment/>
							</FuncParamItem>
						</FuncParamTable>
						<ReturnValue>
							<Type/>
							<Des/>
						</ReturnValue>
					</VirtualInterface>
					<VirtualInterface>
						<FunctionName>AfterFail</FunctionName>
						<FunctionDes>设备返信失败后</FunctionDes>
						<comment>此虚函数暴露的设备返信失败的接口，由虚函数重载</comment>
						<FuncParamTable>
							<FuncParamItem>
								<Name>len</Name>
								<Des>参数值长度</Des>
								<ValueType>unsigned int</ValueType>
								<comment/>
							</FuncParamItem>
							<FuncParamItem>
								<Name>p</Name>
								<Des>参数值</Des>
								<ValueType>const char*</ValueType>
								<comment/>
							</FuncParamItem>
						</FuncParamTable>
						<ReturnValue>
							<Type/>
							<Des/>
						</ReturnValue>
					</VirtualInterface>
					<VirtualInterface>
						<FunctionName>IsShield</FunctionName>
						<FunctionDes>判断设备是否被屏蔽</FunctionDes>
						<comment/>
						<FuncParamTable/>
						<ReturnValue>
							<Type>bool</Type>
							<Des/>
						</ReturnValue>
					</VirtualInterface>
					<VirtualInterface>
						<FunctionName>IsComFault</FunctionName>
						<FunctionDes>判断是否设备通讯故障</FunctionDes>
						<comment/>
						<FuncParamTable/>
						<ReturnValue>
							<Type>bool</Type>
							<Des/>
						</ReturnValue>
					</VirtualInterface>
					<VirtualInterface>
						<FunctionName>WaitExecBody</FunctionName>
						<FunctionDes>等待执行线程实现体</FunctionDes>
						<comment/>
						<FuncParamTable/>
						<ReturnValue>
							<Type>int</Type>
							<Des/>
						</ReturnValue>
					</VirtualInterface>
				</VirtualInterfaceList>
				<OverLoadList>
					<OverLoad>
						<ClassRef>::POINT</ClassRef>
						<FunctionName>initialize</FunctionName>
						<FuncType>虚函数</FuncType>
						<Des>先执行父类的相同函数，再根据类中的所有引用对象字符串进行一次寻址操作，保存在相应的内部成员变量。</Des>
					</OverLoad>
				</OverLoadList>
				<ClassBehaviorVersion>1280136495</ClassBehaviorVersion>
			</ClassBehavior>
		</Class>
		<Class CreateDate="2008-11-26" Creator="LIZHIJUN">
			<ClassID TagName="输出控制点类" Description="所有输出控制点的抽象基类" Name="OutputCtrl" GlobalName="PSCADA_OutputCtrl"/>
			<ClassInfo>
				<BaseClassRef GlobalName="::POINT" RefVersion="1"/>
				<Instanteable>可实例化</Instanteable>
			</ClassInfo>
			<ClassVersion>1272952220</ClassVersion>
			<comment/>
			<ClassPropertyList>
				<ClassPropertyVersion>1272952220</ClassPropertyVersion>
				<ClassProperty>
					<ClassPropertyID TagName="控制状态" Description="控制操作执行状态" Name="execStatus"/>
					<comment>0 : 开始――处于等待选择状态 
1 : 执行中―选择命令已发出，处于等待返校状态
2 : 执行中―返校成功，处于等待预置命令状态
3 : 执行中―预置命令成功，处于等待命令发送状态
4 : 执行中―该命令已发出，处于等待命令返回
5 : 完成―遥控操作成功
6 : 脉冲型命令―保持时间到，收回命令
7 : 错误―选择失败
8 : 错误―返校超时
9 : 错误―等待超时
10: 错误―预置失败
11: 错误―执行超时（或拒动）
12: 错误―执行失败</comment>
					<PropertyProcessChar>
						<StoreChar>自动</StoreChar>
						<EditChar>不可组态</EditChar>
						<VisibleChar>可视</VisibleChar>
						<RealTimeChar>实时项</RealTimeChar>
					</PropertyProcessChar>
					<Size>1</Size>
					<ValueType>基本数据类型</ValueType>
					<BasicType>
						<TypeName>INT8</TypeName>
						<Default/>
						<Min/>
						<Max/>
						<Enum/>
					</BasicType>
				</ClassProperty>
				<ClassProperty>
					<ClassPropertyID TagName="返校超时时间" Description="HMI发出“选择”命令后，开始计时，等待装置或者系统传回返校信息的最大时间，&#xA;       如果超出这一时间，认为出现“返校超时”,单位秒。返校超时时间为0表示&#xA;不需要返校。" Name="returnCheckTime"/>
					<comment/>
					<PropertyProcessChar>
						<StoreChar>自动</StoreChar>
						<EditChar>可组态</EditChar>
						<VisibleChar>可视</VisibleChar>
						<RealTimeChar>参数项</RealTimeChar>
					</PropertyProcessChar>
					<Size>1</Size>
					<ValueType>基本数据类型</ValueType>
					<BasicType>
						<TypeName>UINT8</TypeName>
						<Default/>
						<Min/>
						<Max/>
						<Enum/>
					</BasicType>
				</ClassProperty>
				<ClassProperty>
					<ClassPropertyID TagName="等待执行时间" Description="返校成功后开始计时，直到HMI发出“执行”命令的最大时间。&#xA;       在执行等待过程中，可能需要进行“预置”操作。&#xA;       如果超出这一时间，则取消此次遥控操作，需要重新进行选择。&#xA;       单位秒。 该时间为0表示不需要等待执行。" Name="waitExecuteTime"/>
					<comment/>
					<PropertyProcessChar>
						<StoreChar>自动</StoreChar>
						<EditChar>可组态</EditChar>
						<VisibleChar>可视</VisibleChar>
						<RealTimeChar>参数项</RealTimeChar>
					</PropertyProcessChar>
					<Size>1</Size>
					<ValueType>基本数据类型</ValueType>
					<BasicType>
						<TypeName>UINT8</TypeName>
						<Default/>
						<Min/>
						<Max/>
						<Enum/>
					</BasicType>
				</ClassProperty>
				<ClassProperty>
					<ClassPropertyID TagName="执行超时时间" Description="HMI发出“执行”命令后开始计时，等待装置传回遥控返信信息的最大超时时间。&#xA;       如果超出这一时间，认为出现“执行超时”。单位秒。该时间为0表示没有执行超时。" Name="executeTime"/>
					<comment/>
					<PropertyProcessChar>
						<StoreChar>自动</StoreChar>
						<EditChar>可组态</EditChar>
						<VisibleChar>可视</VisibleChar>
						<RealTimeChar>参数项</RealTimeChar>
					</PropertyProcessChar>
					<Size>1</Size>
					<ValueType>基本数据类型</ValueType>
					<BasicType>
						<TypeName>UINT8</TypeName>
						<Default/>
						<Min/>
						<Max/>
						<Enum/>
					</BasicType>
				</ClassProperty>
				<ClassProperty>
					<ClassPropertyID TagName="输出保持时间" Description="表示遥控命令维持的时间长度，单位秒。该时间为0表示保持型命令，不用收回命令。" Name="outKeepTime"/>
					<comment/>
					<PropertyProcessChar>
						<StoreChar>自动</StoreChar>
						<EditChar>可组态</EditChar>
						<VisibleChar>可视</VisibleChar>
						<RealTimeChar>参数项</RealTimeChar>
					</PropertyProcessChar>
					<Size>1</Size>
					<ValueType>基本数据类型</ValueType>
					<BasicType>
						<TypeName>UINT8</TypeName>
						<Default/>
						<Min/>
						<Max/>
						<Enum/>
					</BasicType>
				</ClassProperty>
				<ClassProperty>
					<ClassPropertyID Description="状态显示，实时刷新" Name="statusDisplay" TagName="状态显示"/>
					<comment/>
					<PropertyProcessChar>
						<StoreChar>自动</StoreChar>
						<EditChar>不可组态</EditChar>
						<VisibleChar>可视</VisibleChar>
						<RealTimeChar>实时项</RealTimeChar>
					</PropertyProcessChar>
					<Size>1</Size>
					<ValueType>基本数据类型</ValueType>
					<BasicType>
						<TypeName>STRING128</TypeName>
						<Default/>
						<Min/>
						<Max/>
						<Enum/>
					</BasicType>
				</ClassProperty>
				<ClassProperty>
					<ClassPropertyID Description="错误信息显示，可以保存" Name="errorDisplay" TagName="错误信息显示"/>
					<comment/>
					<PropertyProcessChar>
						<StoreChar>自动</StoreChar>
						<EditChar>不可组态</EditChar>
						<VisibleChar>可视</VisibleChar>
						<RealTimeChar>实时项</RealTimeChar>
					</PropertyProcessChar>
					<Size>1</Size>
					<ValueType>基本数据类型</ValueType>
					<BasicType>
						<TypeName>STRING128</TypeName>
						<Default/>
						<Min/>
						<Max/>
						<Enum/>
					</BasicType>
				</ClassProperty>
				<ClassProperty>
					<ClassPropertyID Description="遥控操作执行结果状态码，目前有三种结果状态（0，1，2），意义分别为：0表示成功，1表示用户终止，2表示条件不满足、遥控操作失败" Name="resultStatus" TagName="遥控操作执行结果状态码"/>
					<comment>遥控操作执行结果状态码，目前有三种结果状态（0，1，2），分别为：0表示成功，1表示用户终止，2表示条件不满足、遥控操作失败</comment>
					<PropertyProcessChar>
						<StoreChar>自动</StoreChar>
						<EditChar>不可组态</EditChar>
						<VisibleChar>可视</VisibleChar>
						<RealTimeChar>实时项</RealTimeChar>
					</PropertyProcessChar>
					<Size>1</Size>
					<ValueType>基本数据类型</ValueType>
					<BasicType>
						<TypeName>INT8</TypeName>
						<Default/>
						<Min/>
						<Max/>
						<Enum/>
					</BasicType>
				</ClassProperty>
			</ClassPropertyList>
			<ClassBehavior>
				<CommandList/>
				<OnEventList/>
				<ReDefOnEventList/>
				<OutEventList>
					<OutEvent>
						<FunctionName>ExecStatusChanged</FunctionName>
						<FunctionDes>控制状态变化输出事件</FunctionDes>
						<comment>用以触发DataPush事件，以保证控制过程信息能够实时体现在副本</comment>
						<ParamMode>无参数</ParamMode>
					</OutEvent>
				</OutEventList>
				<VirtualInterfaceList/>
				<OverLoadList>
					<OverLoad>
						<ClassRef>::POINT</ClassRef>
						<FunctionName>sync_period</FunctionName>
						<FuncType>虚函数</FuncType>
						<Des>将控制过程信息作为开关量周期使用</Des>
					</OverLoad>
				</OverLoadList>
				<ClassBehaviorVersion>1243834982</ClassBehaviorVersion>
			</ClassBehavior>
		</Class>
		<Class CreateDate="2008-11-26" Creator="LIZHIJUN">
			<ClassID Description=" " TagName="电力系统容器类" Name="Container_PSCADA" GlobalName="PSCADA_Container_PSCADA"/>
			<ClassInfo>
				<BaseClassRef GlobalName="::Container" RefVersion="1"/>
				<Instanteable>可实例化</Instanteable>
			</ClassInfo>
			<ClassVersion>1243333406</ClassVersion>
			<comment>
			</comment>
			<ClassPropertyList>
				<ClassPropertyVersion>1</ClassPropertyVersion>
			</ClassPropertyList>
			<ClassBehavior>
				<CommandList>
					<Command>
						<FunctionName>Mask</FunctionName>
						<FunctionDes>屏蔽/解除屏蔽</FunctionDes>
						<comment>屏蔽/解除屏蔽该容器对象所包含的所有可控设备。</comment>
						<FuncParamTable>
							<FuncParamItem>
								<Name>user</Name>
								<Des>操作员名</Des>
								<ValueType>string</ValueType>
								<TransDirection>in</TransDirection>
								<comment/>
							</FuncParamItem>
							<FuncParamItem>
								<Name>pid</Name>
								<Des>被控点的点号</Des>
								<ValueType>long</ValueType>
								<TransDirection>in</TransDirection>
								<comment/>
							</FuncParamItem>
							<FuncParamItem>
								<Name>MaskOpr</Name>
								<Des>屏蔽／解除屏蔽</Des>
								<ValueType>long</ValueType>
								<TransDirection>in</TransDirection>
								<comment/>
							</FuncParamItem>
						</FuncParamTable>
						<ReturnValue>
							<Type>long</Type>
							<Des>0成功，-1失败</Des>
						</ReturnValue>
					</Command>
					<Command>
						<FunctionName>ProtReset</FunctionName>
						<FunctionDes>保护复归</FunctionDes>
						<comment>保护复归该容器对象所包含的所有设备。</comment>
						<FuncParamTable>
							<FuncParamItem>
								<Name>user</Name>
								<Des>操作员名</Des>
								<ValueType>string</ValueType>
								<TransDirection>in</TransDirection>
								<comment/>
							</FuncParamItem>
							<FuncParamItem>
								<Name>pid</Name>
								<Des>被控点的点号</Des>
								<ValueType>long</ValueType>
								<TransDirection>in</TransDirection>
								<comment/>
							</FuncParamItem>
						</FuncParamTable>
						<ReturnValue>
							<Type>long</Type>
							<Des>0成功，-1失败</Des>
						</ReturnValue>
					</Command>
					<Command>
						<FunctionName>SignReset</FunctionName>
						<FunctionDes>信号复归</FunctionDes>
						<comment>信号复归该容器对象所包含的所有设备。</comment>
						<FuncParamTable>
							<FuncParamItem>
								<Name>user</Name>
								<Des>操作员名</Des>
								<ValueType>string</ValueType>
								<TransDirection>in</TransDirection>
								<comment/>
							</FuncParamItem>
							<FuncParamItem>
								<Name>pid</Name>
								<Des>被控点的点号</Des>
								<ValueType>long</ValueType>
								<TransDirection>in</TransDirection>
								<comment/>
							</FuncParamItem>
						</FuncParamTable>
						<ReturnValue>
							<Type>long</Type>
							<Des>0成功，-1失败</Des>
						</ReturnValue>
					</Command>
					<Command>
						<FunctionName>CtrlLock</FunctionName>
						<FunctionDes>控制闭锁</FunctionDes>
						<comment>只有有遥控操作权限的操作员且开关的控制权在此地才可以进行控制闭锁/解除控制闭锁操作。针对该容器对象所包含的所有可控设备进行控制闭锁/解除控制闭锁。</comment>
						<FuncParamTable>
							<FuncParamItem>
								<Name>user</Name>
								<Des>操作员名</Des>
								<ValueType>string</ValueType>
								<TransDirection>in</TransDirection>
								<comment/>
							</FuncParamItem>
							<FuncParamItem>
								<Name>pid</Name>
								<Des>被控点的点号</Des>
								<ValueType>long</ValueType>
								<TransDirection>in</TransDirection>
								<comment/>
							</FuncParamItem>
							<FuncParamItem>
								<Name>start_or_end</Name>
								<Des>控制闭锁or解锁</Des>
								<ValueType>boolean</ValueType>
								<TransDirection>in</TransDirection>
								<comment/>
							</FuncParamItem>
						</FuncParamTable>
						<ReturnValue>
							<Type>long</Type>
							<Des>0成功，-1失败</Des>
						</ReturnValue>
					</Command>
				</CommandList>
				<OnEventList/>
				<ReDefOnEventList/>
				<OutEventList/>
				<VirtualInterfaceList/>
				<OverLoadList>
				</OverLoadList>
				<ClassBehaviorVersion>1243333406</ClassBehaviorVersion>
			</ClassBehavior>
		</Class>
		<Class CreateDate="2008-12-01" Creator="LIZHIJUN">
			<ClassID Description="" Name="Stat_Accu_Brake" TagName="事故跳闸统计类" GlobalName="PSCADA_Stat_Accu_Brake"/>
			<ClassInfo>
				<BaseClassRef GlobalName="::POINT" RefVersion="1"/>
				<Instanteable>可实例化</Instanteable>
			</ClassInfo>
			<ClassVersion>1228357491</ClassVersion>
			<comment>
			</comment>
			<ClassPropertyList>
				<ClassPropertyVersion>1228096583</ClassPropertyVersion>
				<ClassProperty>
					<ClassPropertyID Description="统计所属该设备的子对象发生报警且同时本设备的手车在工作位这种情况的次数" Name="totalNum" TagName="保护跳闸总次数"/>
					<comment/>
					<PropertyProcessChar>
						<StoreChar>自动</StoreChar>
						<EditChar>不可组态</EditChar>
						<VisibleChar>可视</VisibleChar>
						<RealTimeChar>实时项</RealTimeChar>
					</PropertyProcessChar>
					<Size>1</Size>
					<ValueType>基本数据类型</ValueType>
					<BasicType>
						<TypeName>UINT32</TypeName>
						<Default/>
						<Min/>
						<Max/>
						<Enum/>
					</BasicType>
				</ClassProperty>
				<ClassProperty>
					<ClassPropertyID Description="" Name="totalNumMonth" TagName="保护跳闸月统计次数"/>
					<comment/>
					<PropertyProcessChar>
						<StoreChar>自动</StoreChar>
						<EditChar>不可组态</EditChar>
						<VisibleChar>可视</VisibleChar>
						<RealTimeChar>实时项</RealTimeChar>
					</PropertyProcessChar>
					<Size>1</Size>
					<ValueType>基本数据类型</ValueType>
					<BasicType>
						<TypeName>UINT32</TypeName>
						<Default/>
						<Min/>
						<Max/>
						<Enum/>
					</BasicType>
				</ClassProperty>
				<ClassProperty>
					<ClassPropertyID Description="" Name="totalNumYear" TagName="保护跳闸年统计次数"/>
					<comment/>
					<PropertyProcessChar>
						<StoreChar>自动</StoreChar>
						<EditChar>不可组态</EditChar>
						<VisibleChar>可视</VisibleChar>
						<RealTimeChar>实时项</RealTimeChar>
					</PropertyProcessChar>
					<Size>1</Size>
					<ValueType>基本数据类型</ValueType>
					<BasicType>
						<TypeName>UINT32</TypeName>
						<Default/>
						<Min/>
						<Max/>
						<Enum/>
					</BasicType>
				</ClassProperty>
				<ClassProperty>
					<ClassPropertyID Description="" TagName="保护跳闸日统计次数" Name="totalNumDay"/>
					<comment/>
					<PropertyProcessChar>
						<StoreChar>自动</StoreChar>
						<EditChar>不可组态</EditChar>
						<VisibleChar>可视</VisibleChar>
						<RealTimeChar>实时项</RealTimeChar>
					</PropertyProcessChar>
					<Size>1</Size>
					<ValueType>基本数据类型</ValueType>
					<BasicType>
						<TypeName>UINT32</TypeName>
						<Default/>
						<Min/>
						<Max/>
						<Enum/>
					</BasicType>
				</ClassProperty>
				<ClassProperty>
					<ClassPropertyID Description="" Name="statDay" TagName="当前统计日"/>
					<comment/>
					<PropertyProcessChar>
						<StoreChar>自动</StoreChar>
						<EditChar>不可组态</EditChar>
						<VisibleChar>不可视</VisibleChar>
						<RealTimeChar>实时项</RealTimeChar>
					</PropertyProcessChar>
					<Size>1</Size>
					<ValueType>基本数据类型</ValueType>
					<BasicType>
						<TypeName>UINT8</TypeName>
						<Default/>
						<Min/>
						<Max/>
						<Enum/>
					</BasicType>
				</ClassProperty>
				<ClassProperty>
					<ClassPropertyID Description="" TagName="当前统计月份" Name="statMonth"/>
					<comment/>
					<PropertyProcessChar>
						<StoreChar>自动</StoreChar>
						<EditChar>不可组态</EditChar>
						<VisibleChar>不可视</VisibleChar>
						<RealTimeChar>实时项</RealTimeChar>
					</PropertyProcessChar>
					<Size>1</Size>
					<ValueType>基本数据类型</ValueType>
					<BasicType>
						<TypeName>UINT8</TypeName>
						<Default/>
						<Min/>
						<Max/>
						<Enum/>
					</BasicType>
				</ClassProperty>
				<ClassProperty>
					<ClassPropertyID Description="" TagName="当前统计年份" Name="statYear"/>
					<comment/>
					<PropertyProcessChar>
						<StoreChar>自动</StoreChar>
						<EditChar>不可组态</EditChar>
						<VisibleChar>不可视</VisibleChar>
						<RealTimeChar>实时项</RealTimeChar>
					</PropertyProcessChar>
					<Size>1</Size>
					<ValueType>基本数据类型</ValueType>
					<BasicType>
						<TypeName>UINT8</TypeName>
						<Default/>
						<Min/>
						<Max/>
						<Enum/>
					</BasicType>
				</ClassProperty>
				<ClassProperty>
					<ClassPropertyID Description="统计次数强制清零时间" Name="NumFRT" TagName="统计次数强制清零时间"/>
					<comment/>
					<PropertyProcessChar>
						<StoreChar>自动</StoreChar>
						<EditChar>不可组态</EditChar>
						<VisibleChar>可视</VisibleChar>
						<RealTimeChar>实时项</RealTimeChar>
					</PropertyProcessChar>
					<Size>1</Size>
					<ValueType>基本数据类型</ValueType>
					<BasicType>
						<TypeName>TIME</TypeName>
						<Default/>
						<Min/>
						<Max/>
						<Enum/>
					</BasicType>
				</ClassProperty>
				<ClassProperty>
					<ClassPropertyID Description="上一日保护跳闸总次数" Name="totalNumPreDay" TagName="上一日保护跳闸总次数"/>
					<comment/>
					<PropertyProcessChar>
						<StoreChar>自动</StoreChar>
						<EditChar>不可组态</EditChar>
						<VisibleChar>可视</VisibleChar>
						<RealTimeChar>实时项</RealTimeChar>
					</PropertyProcessChar>
					<Size>1</Size>
					<ValueType>基本数据类型</ValueType>
					<BasicType>
						<TypeName>UINT32</TypeName>
						<Default/>
						<Min/>
						<Max/>
						<Enum/>
					</BasicType>
				</ClassProperty>
				<ClassProperty>
					<ClassPropertyID Description="上一月保护跳闸总次数" TagName="上一月保护跳闸总次数" Name="totalNumPreMonth"/>
					<comment/>
					<PropertyProcessChar>
						<StoreChar>自动</StoreChar>
						<EditChar>不可组态</EditChar>
						<VisibleChar>可视</VisibleChar>
						<RealTimeChar>实时项</RealTimeChar>
					</PropertyProcessChar>
					<Size>1</Size>
					<ValueType>基本数据类型</ValueType>
					<BasicType>
						<TypeName>UINT32</TypeName>
						<Default/>
						<Min/>
						<Max/>
						<Enum/>
					</BasicType>
				</ClassProperty>
				<ClassProperty>
					<ClassPropertyID Description="上一年保护跳闸总次数" TagName="上一年保护跳闸总次数" Name="totalNumPreYear"/>
					<comment/>
					<PropertyProcessChar>
						<StoreChar>自动</StoreChar>
						<EditChar>不可组态</EditChar>
						<VisibleChar>可视</VisibleChar>
						<RealTimeChar>实时项</RealTimeChar>
					</PropertyProcessChar>
					<Size>1</Size>
					<ValueType>基本数据类型</ValueType>
					<BasicType>
						<TypeName>UINT32</TypeName>
						<Default/>
						<Min/>
						<Max/>
						<Enum/>
					</BasicType>
				</ClassProperty>
			</ClassPropertyList>
			<ClassBehavior>
				<CommandList>
					<Command>
						<FunctionName>ForceReset</FunctionName>
						<FunctionDes>统计值强制清零</FunctionDes>
						<comment>所有统计值（总、日、月、年统计值，上一日、月、年统计值）清零，并记录累计值强制清零时间；再执行累计值改变Changed）输出事件，statType为0，即所有累计值变化改变。</comment>
						<FuncParamTable>
							<FuncParamItem>
								<Name>user</Name>
								<Des>操作员名</Des>
								<ValueType>string</ValueType>
								<TransDirection>in</TransDirection>
								<comment/>
							</FuncParamItem>
							<FuncParamItem>
								<Name>pid</Name>
								<Des>被控点的点号</Des>
								<ValueType>long</ValueType>
								<TransDirection>in</TransDirection>
								<comment/>
							</FuncParamItem>
						</FuncParamTable>
						<ReturnValue>
							<Type>long</Type>
							<Des>0成功，-1失败</Des>
						</ReturnValue>
					</Command>
				</CommandList>
				<OnEventList>
					<OnEvent>
						<FunctionName>TimingReset</FunctionName>
						<FunctionDes>统计值定时清零</FunctionDes>
						<EventInputList/>
						<TimerInputList/>
						<EventProcessMode>同步</EventProcessMode>
						<comment>若当前统计日（、月、年）与当前系统时间的日（、月、年）不相等，刷新上一日（、月、年）总统计值为清零前相应的日（、月、年）总累计值、相应的日（、月、年）累计值复位为0、当前统计日（、月、年）为当前系统时间，然后执行累计值改变（Changed）输出事件，statType为2（、3、4）。日定时器事件、月定时器事件、年定时器事件.在C++代码中实现月、年的定时清零判断。</comment>
					</OnEvent>
				</OnEventList>
				<ReDefOnEventList/>
				<OutEventList>
					<OutEvent>
						<FunctionName>Changed</FunctionName>
						<FunctionDes>统计值改变</FunctionDes>
						<comment/>
						<ParamMode>简单参数</ParamMode>
						<ParamItem>
							<TransDirection>in</TransDirection>
							<ParamItemID Name="statType" TagName="统计值变化类型" Description="0－所有累计值变化（保留）;1－总累计值变化;2－日累计值变化;3－月累计值变化;4－年累计值变化"/>
							<ValueType>INT8</ValueType>
							<comment/>
						</ParamItem>
					</OutEvent>
				</OutEventList>
				<VirtualInterfaceList>
					<VirtualInterface>
						<FunctionName>Update</FunctionName>
						<FunctionDes>统计值更新</FunctionDes>
						<comment>判断关联的AM（、AI）的value值变化时，刷新总累计值为当前AM（、AI）的value值，然后，根据刷新的总累计值和上一日（、月、年）总累计值之差计算得出日（、月、年）累计值，执行累计值改变（Changed）输出事件，statType为0，即所有累计值变化改变）。</comment>
						<FuncParamTable/>
						<ReturnValue>
							<Type/>
							<Des/>
						</ReturnValue>
					</VirtualInterface>
				</VirtualInterfaceList>
				<OverLoadList/>
				<ClassBehaviorVersion>1228097119</ClassBehaviorVersion>
			</ClassBehavior>
		</Class>
		<Class CreateDate="2008-12-01" Creator="LIZHIJUN">
			<ClassID Description=" " Name="Stat_Accu_Ammeter" TagName="电度表统计类" GlobalName="PSCADA_Stat_Accu_Ammeter"/>
			<ClassInfo>
				<BaseClassRef GlobalName="::POINT" RefVersion="1"/>
				<Instanteable>可实例化</Instanteable>
			</ClassInfo>
			<ClassVersion>1228108615</ClassVersion>
			<comment>
			</comment>
			<ClassPropertyList>
				<ClassPropertyVersion>1</ClassPropertyVersion>
			</ClassPropertyList>
			<ClassBehavior>
				<CommandList/>
				<OnEventList/>
				<ReDefOnEventList/>
				<OutEventList/>
				<VirtualInterfaceList/>
				<OverLoadList/>
				<ClassBehaviorVersion>1</ClassBehaviorVersion>
			</ClassBehavior>
		</Class>
		<Class CreateDate="2011-03-24" Creator="LIZHIJUN"><ClassID Description="电力设备的所有逻辑，包括挂/摘牌，遥控，定值组切换，选择、取消、执行，屏蔽的逻辑通过组态本类对象生成。" TagName="电力设备遥控逻辑组态类" Name="Control_Logic" GlobalName="PSCADA_Control_Logic"/>
			<ClassInfo>
				<BaseClassRef GlobalName="::POINT" RefVersion="1"/>
				<Instanteable>可实例化</Instanteable>
			</ClassInfo>
			<ClassVersion>1307925307</ClassVersion>
			<comment>继承自类POINT，提供PSCADA设备所需的挂/摘牌，遥控，定值组切换，选择、取消、执行，屏蔽，等功能的逻辑组态。</comment>
			<ClassPropertyList>
				<ClassPropertyVersion>1307925307</ClassPropertyVersion>
				<ClassProperty><ClassPropertyID Description="存使能判断表达式" Name="ExpressionEnable" TagName="使能表达式"/>
					<comment>用于存储所有命令的使能判断表达式</comment>
					<PropertyProcessChar>
						<StoreChar>静态</StoreChar>
						<EditChar>可组态</EditChar>
						<VisibleChar>可视</VisibleChar>
						<RealTimeChar>参数项</RealTimeChar>
					</PropertyProcessChar>
					<Size>64</Size>
					<ValueType>结构</ValueType>
					<StructType><Declaration>true</Declaration>
						<Struct><StructID Name="LocalStruct" TagName="自定义结构" Description=" " GlobalName="PSCADA_Control_Logic_ExpressionEnable_S"/><StructVersion>1</StructVersion><comment>
							</comment><StructPropertyList>
								<StructProperty>
									<StructPropertyID Name="KeyWord" TagName="表达式关键字" Description="关键字"/>
									<comment/>
									<ValueType>STRING32</ValueType>
								</StructProperty>
								<StructProperty>
									<StructPropertyID Name="ExpressionTCL" TagName="表达式TCL语句" Description="TCL语句的一部分，需要具有独立语义"/>
									<comment/>
									<ValueType>STRING256</ValueType>
								</StructProperty>
								<StructProperty>
									<StructPropertyID Name="ExpressionOutDes" TagName="表达式输出描述" Description="用于反映表达式执行情况"/>
									<comment/>
									<ValueType>STRING32</ValueType>
								</StructProperty>
							</StructPropertyList></Struct></StructType></ClassProperty>
				<ClassProperty><ClassPropertyID Description="存储许可表达式" TagName="许可表达式" Name="ExpressionValidation"/>
					<comment>用于存储所有命令的使能判断表达式</comment>
					<PropertyProcessChar>
						<StoreChar>静态</StoreChar>
						<EditChar>可组态</EditChar>
						<VisibleChar>不可视</VisibleChar>
						<RealTimeChar>参数项</RealTimeChar>
					</PropertyProcessChar>
					<Size>64</Size>
					<ValueType>结构</ValueType>
					<StructType><Declaration>true</Declaration>
						<Struct><StructID Name="LocalStruct" TagName="自定义结构" Description=" " GlobalName="PSCADA_Control_Logic_ExpressionValidation_S"/><StructVersion>1</StructVersion><comment>
							</comment><StructPropertyList>
								<StructProperty>
									<StructPropertyID Name="KeyWord" TagName="表达式关键字" Description="关键字"/>
									<comment/>
									<ValueType>STRING32</ValueType>
								</StructProperty>
								<StructProperty>
									<StructPropertyID Name="ExpressionTCL" TagName="表达式TCL语句" Description="TCL语句的一部分，需要具有独立语义"/>
									<comment/>
									<ValueType>STRING256</ValueType>
								</StructProperty>
								<StructProperty>
									<StructPropertyID Name="ExpressionOutDes" TagName="表达式输出描述" Description="用于反映表达式执行情况"/>
									<comment/>
									<ValueType>STRING32</ValueType>
								</StructProperty>
							</StructPropertyList></Struct></StructType></ClassProperty>
				<ClassProperty><ClassPropertyID Description="存储控制输出表达式" TagName="输出表达式" Name="ExpressionOutControl"/>
					<comment>用于存储所有命令的输出控制表达式</comment>
					<PropertyProcessChar>
						<StoreChar>静态</StoreChar>
						<EditChar>可组态</EditChar>
						<VisibleChar>不可视</VisibleChar>
						<RealTimeChar>参数项</RealTimeChar>
					</PropertyProcessChar>
					<Size>64</Size>
					<ValueType>结构</ValueType>
					<StructType><Declaration>true</Declaration>
						<Struct><StructID Name="LocalStruct" TagName="自定义结构" Description=" " GlobalName="PSCADA_Control_Logic_ExpressionOutControl_S"/><StructVersion>1</StructVersion><comment>
							</comment><StructPropertyList>
								<StructProperty>
									<StructPropertyID Name="KeyWord" TagName="表达式关键字" Description="关键字"/>
									<comment/>
									<ValueType>STRING32</ValueType>
								</StructProperty>
								<StructProperty>
									<StructPropertyID Name="ExpressionOutDes" TagName="表达式输出描述" Description="用于反映表达式执行情况,在输出控制中可为空"/>
									<comment/>
									<ValueType>STRING32</ValueType>
								</StructProperty>
								<StructProperty>
									<StructPropertyID Name="OutputTCL" TagName="输出TCL语句" Description="输出执行的TCL语句"/>
									<comment>仅当输出类型为TCL语句时有效。</comment>
									<ValueType>STRING256</ValueType>
								</StructProperty>
							</StructPropertyList></Struct></StructType></ClassProperty>
				<ClassProperty><ClassPropertyID Description="存储返校检验表达式" TagName="返校表达式" Name="ExpressionReturnCheck"/>
					<comment>用于存储所有命令的返校表达式</comment>
					<PropertyProcessChar>
						<StoreChar>静态</StoreChar>
						<EditChar>可组态</EditChar>
						<VisibleChar>不可视</VisibleChar>
						<RealTimeChar>参数项</RealTimeChar>
					</PropertyProcessChar>
					<Size>64</Size>
					<ValueType>结构</ValueType>
					<StructType><Declaration>true</Declaration>
						<Struct><StructID Name="LocalStruct" TagName="自定义结构" Description=" " GlobalName="PSCADA_Control_Logic_ExpressionReturnCheck_S"/><StructVersion>1</StructVersion><comment>
							</comment><StructPropertyList>
								<StructProperty>
									<StructPropertyID Name="KeyWord" TagName="表达式关键字" Description="关键字"/>
									<comment/>
									<ValueType>STRING32</ValueType>
								</StructProperty>
								<StructProperty>
									<StructPropertyID Name="ExpressionTCL" TagName="表达式TCL语句" Description="TCL语句的一部分，需要具有独立语义"/>
									<comment/>
									<ValueType>STRING256</ValueType>
								</StructProperty>
								<StructProperty>
									<StructPropertyID Name="ExpressionOutDes" TagName="表达式输出描述" Description="用于反映表达式执行情况"/>
									<comment/>
									<ValueType>STRING32</ValueType>
								</StructProperty>
								<StructProperty>
									<StructPropertyID Name="Cycle" TagName="返校时间间隔Cycle" Description="返校时间间隔Cycle"/>
									<comment/>
									<ValueType>INT32</ValueType>
								</StructProperty>
								<StructProperty>
									<StructPropertyID Name="Round" TagName="最大返较次数Round" Description="最大返较次数Round"/>
									<comment/>
									<ValueType>INT32</ValueType>
								</StructProperty>
							</StructPropertyList></Struct></StructType></ClassProperty>
				<ClassProperty><ClassPropertyID Description="根据分合闸自动匹配" Name="AutoSelect" TagName="自动匹配"/>
					<comment></comment>
					<PropertyProcessChar>
						<StoreChar>静态</StoreChar>
						<EditChar>可组态</EditChar>
						<VisibleChar>可视</VisibleChar>
						<RealTimeChar>参数项</RealTimeChar>
					</PropertyProcessChar>
					<Size>64</Size>
					<ValueType>结构</ValueType>
					<StructType><Declaration>true</Declaration>
						<Struct><StructID Name="LocalStruct" TagName="自定义结构" Description=" " GlobalName="PSCADA_Control_Logic_AutoSelect_S"/><StructVersion>1</StructVersion><comment>
							</comment><StructPropertyList>
								<StructProperty>
									<StructPropertyID Name="KeyWord" TagName="关键字" Description="自动匹配命令的关键字"/>
									<comment/>
									<ValueType>STRING32</ValueType>
								</StructProperty>
								<StructProperty>
									<StructPropertyID Name="JudgeTcl" TagName="匹配条件" Description="匹配条件"/>
									<comment/>
									<ValueType>STRING256</ValueType>
								</StructProperty>
								<StructProperty>
									<StructPropertyID Name="OperateWord" TagName="匹配操作" Description="根据操作输出的关键字"/>
									<comment/>
									<ValueType>STRING32</ValueType>
								</StructProperty>
							</StructPropertyList></Struct></StructType></ClassProperty>
				<ClassProperty><ClassPropertyID Description="返校后可能存在的处理在此组态." Name="ExpressionDealAfterCheck" TagName="处理表达式"/>
					<comment>根据返校成功/失败结果在此处理.</comment>
					<PropertyProcessChar>
						<StoreChar>自动</StoreChar>
						<EditChar>可组态</EditChar>
						<VisibleChar>可视</VisibleChar>
						<RealTimeChar>参数项</RealTimeChar>
					</PropertyProcessChar>
					<Size>64</Size>
					<ValueType>结构</ValueType>
					<StructType><Declaration>true</Declaration>
						<Struct><StructID Name="LocalStruct" TagName="自定义结构" Description=" " GlobalName="PSCADA_Control_Logic_ExpressionDealAfterCheck_S"/><StructVersion>1</StructVersion><comment>
							</comment><StructPropertyList>
								<StructProperty>
									<StructPropertyID Name="KeyWord" TagName="表达式关键字" Description="关键字"/>
									<comment/>
									<ValueType>STRING32</ValueType>
								</StructProperty>
								<StructProperty>
									<StructPropertyID Name="ExpressionTCL" TagName="表达式TCL语句" Description="返校后执行的TCL语句"/>
									<comment/>
									<ValueType>STRING256</ValueType>
								</StructProperty>
								<StructProperty>
									<StructPropertyID Name="ExpressionAfterDes" TagName="TCL执行失败描述" Description="TCL执行失败描述"/>
									<comment/>
									<ValueType>STRING32</ValueType>
								</StructProperty>
								<StructProperty>
									<StructPropertyID Name="DealCondition" TagName="处理条件" Description="0-返校成功后处理&#xA;1-返校失败后处理&#xA;2-无论返校结构都处理&#xA;其它值，不处理&#xA;"/>
									<comment/>
									<ValueType>INT8</ValueType>
								</StructProperty>
							</StructPropertyList></Struct></StructType></ClassProperty></ClassPropertyList>
			<ClassBehavior>
				<CommandList>
				</CommandList>
				<OnEventList/>
				<ReDefOnEventList>
				</ReDefOnEventList>
				<OutEventList>
				</OutEventList>
				<VirtualInterfaceList>
				</VirtualInterfaceList>
				<OverLoadList>
				</OverLoadList>
				<ClassBehaviorVersion>1300962546</ClassBehaviorVersion>
			</ClassBehavior>
		</Class></ClassList>
</ClassFamily>